// <auto-generated />
using System;
using Es.Riam.Gnoss.AD.EntityModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Es.Riam.Gnoss.AD.Migrations.EntityContextPostgresMigrations
{
    [DbContext(typeof(EntityContextPostgres))]
    [Migration("20250624065100_RolesYPermisos")]
    partial class RolesYPermisos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.AccionesExternas", b =>
                {
                    b.Property<short>("TipoAccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("TipoAccion"));

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.HasKey("TipoAccion");

                    b.ToTable("AccionesExternas");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.ConfigApplicationInsightsDominio", b =>
                {
                    b.Property<string>("Dominio")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ImplementationKey")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<int>("UbicacionLogs")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<int>("UbicacionTrazas")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.HasKey("Dominio");

                    b.ToTable("ConfigApplicationInsightsDominio");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.ConfiguracionBBDD", b =>
                {
                    b.Property<short>("NumConexion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("NumConexion"));

                    b.Property<int?>("ConectionTimeout")
                        .HasColumnType("integer")
                        .HasColumnOrder(7);

                    b.Property<string>("Conexion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(3);

                    b.Property<string>("DatosExtra")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(4);

                    b.Property<bool>("EsMaster")
                        .HasColumnType("boolean")
                        .HasColumnOrder(5);

                    b.Property<bool>("LecturaPermitida")
                        .HasColumnType("boolean")
                        .HasColumnOrder(6);

                    b.Property<string>("NombreConexion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.Property<short>("TipoConexion")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.HasKey("NumConexion");

                    b.ToTable("ConfiguracionBBDD");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.ConfiguracionServicios", b =>
                {
                    b.Property<short>("NumServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("NumServicio"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(3);

                    b.HasKey("NumServicio");

                    b.ToTable("ConfiguracionServicios");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.ConfiguracionServiciosDominio", b =>
                {
                    b.Property<short>("NumServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("NumServicio"));

                    b.Property<string>("Dominio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(3);

                    b.HasKey("NumServicio");

                    b.ToTable("ConfiguracionServiciosDominio");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.ConfiguracionServiciosProyecto", b =>
                {
                    b.Property<short>("NumServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("NumServicio"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(3);

                    b.HasKey("NumServicio");

                    b.ToTable("ConfiguracionServiciosProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Blog.Blog", b =>
                {
                    b.Property<Guid>("BlogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<short>("ArticulosPorPagina")
                        .HasColumnType("smallint");

                    b.Property<int?>("ArticulosTotales")
                        .HasColumnType("integer");

                    b.Property<Guid>("AutorID")
                        .HasColumnType("uuid");

                    b.Property<int?>("ComentariosTotales")
                        .HasColumnType("integer");

                    b.Property<bool>("CrearFuentesWeb")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Licencia")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("NombreCorto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<bool>("PermiteActualizarTwitter")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermitirComentarios")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermitirTrackbacks")
                        .HasColumnType("boolean");

                    b.Property<int>("Seguidores")
                        .HasColumnType("integer");

                    b.Property<string>("Subtitulo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<short>("Visibilidad")
                        .HasColumnType("smallint");

                    b.Property<bool>("VisibilidadBuscadoresWeb")
                        .HasColumnType("boolean");

                    b.Property<bool>("VisibilidadListadosBusquedas")
                        .HasColumnType("boolean");

                    b.HasKey("BlogID");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Blog.BlogAgCatTesauro", b =>
                {
                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CategoriaTesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("BlogID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("TesauroID", "CategoriaTesauroID", "BlogID");

                    b.HasIndex("BlogID");

                    b.ToTable("BlogAgCatTesauro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Blog.BlogComunidad", b =>
                {
                    b.Property<Guid>("BlogID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<bool>("Compartido")
                        .HasColumnType("boolean");

                    b.HasKey("BlogID", "ProyectoID", "OrganizacionID");

                    b.ToTable("BlogComunidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Blog.EntradaBlog", b =>
                {
                    b.Property<Guid>("BlogID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("EntradaBlogID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AutorID")
                        .HasColumnType("uuid");

                    b.Property<bool>("Borrador")
                        .HasColumnType("boolean");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<short>("Estado")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<short>("Visibilidad")
                        .HasColumnType("smallint");

                    b.Property<int>("Visitas")
                        .HasColumnType("integer");

                    b.HasKey("BlogID", "EntradaBlogID");

                    b.ToTable("EntradaBlog");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSBloque", b =>
                {
                    b.Property<Guid>("BloqueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BloquePadreID")
                        .HasColumnType("uuid");

                    b.Property<bool>("Borrador")
                        .HasColumnType("boolean");

                    b.Property<string>("Estilos")
                        .HasColumnType("text");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<short>("Ubicacion")
                        .HasColumnType("smallint");

                    b.HasKey("BloqueID");

                    b.HasIndex("OrganizacionID", "ProyectoID", "Ubicacion");

                    b.ToTable("CMSBloque");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSBloqueComponente", b =>
                {
                    b.Property<Guid>("BloqueID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ComponenteID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("BloqueID", "ComponenteID");

                    b.HasIndex("ComponenteID");

                    b.ToTable("CMSBloqueComponente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSBloqueComponentePropiedadComponente", b =>
                {
                    b.Property<Guid>("BloqueID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ComponenteID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("TipoPropiedadComponente")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<string>("ValorPropiedad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BloqueID", "ComponenteID", "TipoPropiedadComponente");

                    b.ToTable("CMSBloqueComponentePropiedadComponente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSComponente", b =>
                {
                    b.Property<Guid>("ComponenteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AccesoPublico")
                        .HasColumnType("boolean");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Estilos")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IdiomasDisponibles")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreCortoComponente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<short>("TipoCaducidadComponente")
                        .HasColumnType("smallint");

                    b.Property<short>("TipoComponente")
                        .HasColumnType("smallint");

                    b.HasKey("ComponenteID");

                    b.ToTable("CMSComponente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSComponentePrivadoProyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("TipoComponente")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.HasKey("OrganizacionID", "ProyectoID", "TipoComponente");

                    b.ToTable("CMSComponentePrivadoProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSComponenteRolGrupoIdentidades", b =>
                {
                    b.Property<Guid>("ComponenteID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.HasKey("ComponenteID", "GrupoID");

                    b.ToTable("CMSComponenteRolGrupoIdentidades");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSComponenteRolIdentidad", b =>
                {
                    b.Property<Guid>("ComponenteID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.HasKey("ComponenteID", "PerfilID");

                    b.ToTable("CMSComponenteRolIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSPagina", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("Ubicacion")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<bool>("Activa")
                        .HasColumnType("boolean");

                    b.Property<string>("HTMLAlternativo")
                        .HasColumnType("text");

                    b.Property<bool>("MostrarSoloCuerpo")
                        .HasColumnType("boolean");

                    b.Property<short>("Privacidad")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID", "ProyectoID", "Ubicacion");

                    b.ToTable("CMSPagina");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSPropiedadComponente", b =>
                {
                    b.Property<Guid>("ComponenteID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<short>("TipoPropiedadComponente")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.Property<string>("ValorPropiedad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ComponenteID", "TipoPropiedadComponente");

                    b.ToTable("CMSPropiedadComponente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSRolGrupoIdentidades", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("Ubicacion")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.HasKey("OrganizacionID", "ProyectoID", "Ubicacion", "GrupoID");

                    b.ToTable("CMSRolGrupoIdentidades");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSRolIdentidad", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("Ubicacion")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.HasKey("OrganizacionID", "ProyectoID", "Ubicacion", "PerfilID");

                    b.ToTable("CMSRolIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Cache.ConfiguracionCachesCostosas", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<bool>("CachesAnonimas")
                        .HasColumnType("boolean");

                    b.Property<bool>("CachesDeBusquedasActivas")
                        .HasColumnType("boolean");

                    b.Property<long>("DuracionConsulta")
                        .HasColumnType("bigint");

                    b.Property<long>("TiempoExpiracion")
                        .HasColumnType("bigint");

                    b.Property<long>("TiempoExpiracionCachesDeUsuario")
                        .HasColumnType("bigint");

                    b.Property<long>("TiempoRecalcularCaches")
                        .HasColumnType("bigint");

                    b.HasKey("OrganizacionID", "ProyectoID");

                    b.ToTable("ConfiguracionCachesCostosas");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Carga.Carga", b =>
                {
                    b.Property<Guid>("CargaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<short>("Estado")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("IdentidadID")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .HasMaxLength(1200)
                        .HasColumnType("character varying(1200)");

                    b.Property<string>("Ontologia")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<Guid?>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("CargaID");

                    b.ToTable("Carga");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Carga.CargaPaquete", b =>
                {
                    b.Property<Guid>("PaqueteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CargaID")
                        .HasColumnType("uuid");

                    b.Property<bool>("Comprimido")
                        .HasColumnType("boolean");

                    b.Property<string>("Error")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)");

                    b.Property<short>("Estado")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaProcesado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RutaBusqueda")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("RutaOnto")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("RutaSQL")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.HasKey("PaqueteID");

                    b.HasIndex("CargaID");

                    b.ToTable("CargaPaquete");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.Comentario", b =>
                {
                    b.Property<Guid>("ComentarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ComentarioSuperiorID")
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.HasKey("ComentarioID");

                    b.HasIndex("ComentarioSuperiorID");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.ComentarioBlog", b =>
                {
                    b.Property<Guid>("ComentarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("BlogID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("EntradaBlogID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("ComentarioID", "BlogID", "EntradaBlogID");

                    b.ToTable("ComentarioBlog");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.ComentarioCuestion", b =>
                {
                    b.Property<Guid>("ComentarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CuestionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.HasKey("ComentarioID", "CuestionID");

                    b.ToTable("ComentarioCuestion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.VotoComentario", b =>
                {
                    b.Property<Guid>("VotoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ComentarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.HasKey("VotoID", "ComentarioID");

                    b.HasIndex("ComentarioID");

                    b.ToTable("VotoComentario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ComparticionAutomatica.ComparticionAutomatica", b =>
                {
                    b.Property<Guid>("ComparticionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("ActualizarHome")
                        .HasColumnType("boolean");

                    b.Property<bool>("Eliminada")
                        .HasColumnType("boolean");

                    b.Property<Guid>("IdentidadPublicadoraID")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("OrganizacionDestinoID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrganizacionOrigenID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoDestinoID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoOrigenID")
                        .HasColumnType("uuid");

                    b.HasKey("ComparticionID");

                    b.ToTable("ComparticionAutomatica");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ComparticionAutomatica.ComparticionAutomaticaMapping", b =>
                {
                    b.Property<Guid>("ComparticionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("ReglaMapping")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("CategoriaTesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<int>("GrupoMapping")
                        .HasColumnType("integer");

                    b.HasKey("ComparticionID", "ReglaMapping", "TesauroID", "CategoriaTesauroID");

                    b.ToTable("ComparticionAutomaticaMapping");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ComparticionAutomatica.ComparticionAutomaticaReglas", b =>
                {
                    b.Property<Guid>("ComparticionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Regla")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnOrder(1);

                    b.Property<string>("Navegacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)");

                    b.HasKey("ComparticionID", "Regla");

                    b.ToTable("ComparticionAutomaticaReglas");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ConfiguracionEnvioCorreo", b =>
                {
                    b.Property<Guid>("ProyectoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool?>("SSL")
                        .HasColumnType("boolean");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("emailsugerencias")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<short>("puerto")
                        .HasColumnType("smallint");

                    b.Property<string>("smtp")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("ProyectoID");

                    b.ToTable("ConfiguracionEnvioCorreo");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Cookies.CategoriaProyectoCookie", b =>
                {
                    b.Property<Guid>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<bool>("EsCategoriaTecnica")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("CategoriaID");

                    b.HasIndex("ProyectoID", "OrganizacionID");

                    b.ToTable("CategoriaProyectoCookie");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Cookies.ProyectoCookie", b =>
                {
                    b.Property<Guid>("CookieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CategoriaID")
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<bool>("EsEditable")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.HasKey("CookieID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("ProyectoID", "OrganizacionID");

                    b.ToTable("ProyectoCookie");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.AtributoFichaBibliografica", b =>
                {
                    b.Property<Guid>("AtributoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("FichaBibliograficaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("Longitud")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("AtributoID", "FichaBibliograficaID");

                    b.HasIndex("FichaBibliograficaID");

                    b.ToTable("AtributoFichaBibliografica");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.BaseRecursos", b =>
                {
                    b.Property<Guid>("BaseRecursosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("BaseRecursosID");

                    b.ToTable("BaseRecursos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.BaseRecursosOrganizacion", b =>
                {
                    b.Property<Guid>("BaseRecursosID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<double?>("EspacioActualMyGnossMB")
                        .HasColumnType("double precision");

                    b.Property<double?>("EspacioMaxMyGnossMB")
                        .HasColumnType("double precision");

                    b.HasKey("BaseRecursosID", "OrganizacionID");

                    b.HasIndex("OrganizacionID");

                    b.ToTable("BaseRecursosOrganizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.BaseRecursosProyecto", b =>
                {
                    b.Property<Guid>("BaseRecursosID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("BaseRecursosID", "OrganizacionID", "ProyectoID");

                    b.ToTable("BaseRecursosProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.BaseRecursosUsuario", b =>
                {
                    b.Property<Guid>("BaseRecursosID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<double?>("EspacioActualMyGnossMB")
                        .HasColumnType("double precision");

                    b.Property<double?>("EspacioMaxMyGnossMB")
                        .HasColumnType("double precision");

                    b.HasKey("BaseRecursosID", "UsuarioID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("BaseRecursosUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.ColaCargaRecursos", b =>
                {
                    b.Property<int>("ColaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ColaID"));

                    b.Property<short>("Estado")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ID")
                        .HasColumnType("uuid");

                    b.Property<string>("NombreFichImport")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid");

                    b.HasKey("ColaID");

                    b.ToTable("ColaCargaRecursos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.ColaDocumento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<short>("AccionRealizada")
                        .HasColumnType("smallint");

                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid");

                    b.Property<short>("Estado")
                        .HasColumnType("smallint");

                    b.Property<long?>("EstadoCargaID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaEncolado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaProcesado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InfoExtra")
                        .HasColumnType("text");

                    b.Property<short>("Prioridad")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("ColaDocumento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Autor")
                        .HasColumnType("text");

                    b.Property<bool>("Borrador")
                        .HasColumnType("boolean");

                    b.Property<bool>("CompartirPermitido")
                        .HasColumnType("boolean");

                    b.Property<bool>("CreadorEsAutor")
                        .HasColumnType("boolean");

                    b.Property<Guid>("CreadorID")
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<Guid?>("ElementoVinculadoID")
                        .HasColumnType("uuid");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<string>("Enlace")
                        .HasMaxLength(1200)
                        .HasColumnType("character varying(1200)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaProteccion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("FichaBibliograficaID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdentidadProteccionID")
                        .HasColumnType("uuid");

                    b.Property<string>("Licencia")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("NombreCategoriaDoc")
                        .HasColumnType("text");

                    b.Property<string>("NombreElementoVinculado")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("NumeroComentariosPublicos")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroTotalConsultas")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroTotalDescargas")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroTotalVotos")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<bool>("PrivadoEditores")
                        .HasColumnType("boolean");

                    b.Property<bool>("Protegido")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<bool>("Publico")
                        .HasColumnType("boolean");

                    b.Property<int?>("Rank")
                        .HasColumnType("integer");

                    b.Property<double?>("Rank_Tiempo")
                        .HasColumnType("double precision");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.Property<short>("TipoEntidad")
                        .HasColumnType("smallint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("UltimaVersion")
                        .HasColumnType("boolean");

                    b.Property<double?>("Valoracion")
                        .HasColumnType("double precision");

                    b.Property<int?>("VersionFotoDocumento")
                        .HasColumnType("integer");

                    b.Property<short>("Visibilidad")
                        .HasColumnType("smallint");

                    b.HasKey("DocumentoID");

                    b.HasIndex("CreadorID");

                    b.HasIndex("Tipo", "Eliminado", "Visibilidad");

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("Tipo", "Eliminado", "Visibilidad"), new[] { "ProyectoID" });

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoAtributoBiblio", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("AtributoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("FichaBibliograficaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("Valor")
                        .HasColumnType("text");

                    b.HasKey("DocumentoID", "AtributoID", "FichaBibliograficaID");

                    b.HasIndex("AtributoID", "FichaBibliograficaID");

                    b.ToTable("DocumentoAtributoBiblio");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoComentario", b =>
                {
                    b.Property<Guid>("ComentarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("ComentarioID", "DocumentoID");

                    b.ToTable("DocumentoComentario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoEnEdicion", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaEdicion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.HasKey("DocumentoID");

                    b.ToTable("DocumentoEnEdicion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoEntidadGnoss", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("EntidadGnossID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CategoriaDocumentacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(4);

                    b.HasKey("OrganizacionID", "ProyectoID", "EntidadGnossID", "DocumentoID", "CategoriaDocumentacionID");

                    b.ToTable("DocumentoEntidadGnoss");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoEnvioNewsLetter", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnOrder(2);

                    b.Property<bool>("EnvioRealizado")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnvioSolicitado")
                        .HasColumnType("boolean");

                    b.Property<string>("Grupos")
                        .HasColumnType("text");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.HasKey("DocumentoID", "IdentidadID", "Fecha");

                    b.ToTable("DocumentoEnvioNewsLetter");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoGrupoUsuario", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("GrupoUsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool>("Editor")
                        .HasColumnType("boolean");

                    b.HasKey("DocumentoID", "GrupoUsuarioID");

                    b.ToTable("DocumentoGrupoUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoLecturaAumentada", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid");

                    b.Property<string>("DescripcionAumentada")
                        .HasColumnType("text");

                    b.Property<string>("EntitiesInfo")
                        .HasColumnType("text");

                    b.Property<string>("TituloAumentado")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("TopicsInfo")
                        .HasColumnType("text");

                    b.Property<bool>("Validada")
                        .HasColumnType("boolean");

                    b.HasKey("DocumentoID");

                    b.ToTable("DocumentoLecturaAumentada");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoMetaDatos", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid");

                    b.Property<string>("MetaDescripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("MetaTitulo")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("DocumentoID");

                    b.ToTable("DocumentoMetaDatos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoNewsletter", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Newsletter")
                        .HasColumnType("text");

                    b.Property<string>("NewsletterTemporal")
                        .HasColumnType("text");

                    b.HasKey("DocumentoID");

                    b.ToTable("DocumentoNewsletter");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoRespuesta", b =>
                {
                    b.Property<Guid>("RespuestaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid");

                    b.Property<int>("NumVotos")
                        .HasColumnType("integer");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.HasKey("RespuestaID");

                    b.ToTable("DocumentoRespuesta");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoRespuestaVoto", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("RespuestaID")
                        .HasColumnType("uuid");

                    b.HasKey("DocumentoID", "IdentidadID");

                    b.HasIndex("RespuestaID");

                    b.ToTable("DocumentoRespuestaVoto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoRolGrupoIdentidades", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool>("Editor")
                        .HasColumnType("boolean");

                    b.HasKey("DocumentoID", "GrupoID");

                    b.ToTable("DocumentoRolGrupoIdentidades");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoRolIdentidad", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool>("Editor")
                        .HasColumnType("boolean");

                    b.HasKey("DocumentoID", "PerfilID");

                    b.ToTable("DocumentoRolIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoTipologia", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("TipologiaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AtributoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("Valor")
                        .HasColumnType("text");

                    b.HasKey("DocumentoID", "TipologiaID", "AtributoID");

                    b.HasIndex("TipologiaID", "AtributoID");

                    b.ToTable("DocumentoTipologia");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoTokenBrightcove", b =>
                {
                    b.Property<Guid>("TokenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid");

                    b.Property<short>("Estado")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NombreArchivo")
                        .HasColumnType("text");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid");

                    b.HasKey("TokenID");

                    b.ToTable("DocumentoTokenBrightcove");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoTokenTOP", b =>
                {
                    b.Property<Guid>("TokenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid");

                    b.Property<short>("Estado")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NombreArchivo")
                        .HasColumnType("text");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid");

                    b.HasKey("TokenID");

                    b.ToTable("DocumentoTokenTOP");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoUrlCanonica", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("UrlCanonica")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("DocumentoID");

                    b.ToTable("DocumentoUrlCanonica");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoVincDoc", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("DocumentoVincID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.HasKey("DocumentoID", "DocumentoVincID");

                    b.HasIndex("DocumentoVincID");

                    b.ToTable("DocumentoVincDoc");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoWebAgCatTesauro", b =>
                {
                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CategoriaTesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("BaseRecursosID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("TesauroID", "CategoriaTesauroID", "BaseRecursosID", "DocumentoID");

                    b.ToTable("DocumentoWebAgCatTesauro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoWebVinBaseRecursos", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("BaseRecursosID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("Compartido")
                        .HasColumnType("boolean");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("FechaCertificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaUltimaVisita")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("IdentPubVisibleExt")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("IdentidadPublicacionID")
                        .HasColumnType("uuid");

                    b.Property<bool>("IndexarRecurso")
                        .HasColumnType("boolean");

                    b.Property<bool>("LinkAComunidadOrigen")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("NivelCertificacionID")
                        .HasColumnType("uuid");

                    b.Property<string>("NombreCortoOrgPublicador")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NombreCortoPublicador")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NombreOrgPublicador")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NombrePublicador")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int>("NumeroComentarios")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroConsultas")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroDescargas")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroVotos")
                        .HasColumnType("integer");

                    b.Property<bool>("PermiteComentarios")
                        .HasColumnType("boolean");

                    b.Property<bool>("PrivadoEditores")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("PublicadorOrgID")
                        .HasColumnType("uuid");

                    b.Property<int?>("Rank")
                        .HasColumnType("integer");

                    b.Property<double?>("Rank_Tiempo")
                        .HasColumnType("double precision");

                    b.Property<short?>("TipoIdentidadPublicador")
                        .HasColumnType("smallint");

                    b.Property<short>("TipoPublicacion")
                        .HasColumnType("smallint");

                    b.HasKey("DocumentoID", "BaseRecursosID");

                    b.HasIndex("BaseRecursosID");

                    b.HasIndex("NivelCertificacionID");

                    b.ToTable("DocumentoWebVinBaseRecursos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoWebVinBaseRecursosExtra", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("BaseRecursosID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("FechaUltimaVisita")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("NumeroConsultas")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroDescargas")
                        .HasColumnType("integer");

                    b.HasKey("DocumentoID", "BaseRecursosID");

                    b.ToTable("DocumentoWebVinBaseRecursosExtra");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.FichaBibliografica", b =>
                {
                    b.Property<Guid>("FichaBibliograficaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("FichaBibliograficaID");

                    b.ToTable("FichaBibliografica");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.HistorialDocumento", b =>
                {
                    b.Property<Guid>("HistorialDocumentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Accion")
                        .HasColumnType("integer");

                    b.Property<Guid?>("CategoriaTesauroID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<string>("TagNombre")
                        .HasColumnType("text");

                    b.HasKey("HistorialDocumentoID");

                    b.HasIndex("DocumentoID");

                    b.ToTable("HistorialDocumento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.ResultadoSuscripcion", b =>
                {
                    b.Property<Guid>("SuscripcionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("RecursoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("AutorID")
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Enlace")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaProcesado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Leido")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OrigenID")
                        .HasColumnType("uuid");

                    b.Property<string>("OrigenNombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("OrigenNombreCorto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Sincaducidad")
                        .HasColumnType("boolean");

                    b.Property<short?>("TipoDocumento")
                        .HasColumnType("smallint");

                    b.Property<short>("TipoResultado")
                        .HasColumnType("smallint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("SuscripcionID", "RecursoID");

                    b.ToTable("ResultadoSuscripcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Tipologia", b =>
                {
                    b.Property<Guid>("TipologiaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("AtributoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("TipologiaID", "AtributoID");

                    b.ToTable("Tipologia");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.VersionDocumento", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentoOriginalID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("DocumentoID");

                    b.ToTable("VersionDocumento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.VotoDocumento", b =>
                {
                    b.Property<Guid>("DocumentoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("VotoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("DocumentoID", "VotoID");

                    b.HasIndex("VotoID");

                    b.ToTable("VotoDocumento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.ConfiguracionConexionGrafo", b =>
                {
                    b.Property<string>("Grafo")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<string>("CadenaConexion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Grafo");

                    b.ToTable("ConfiguracionConexionGrafo");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaConfigProyChart", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ChartID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("FiltrosConsultaVirtuoso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JSBase")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JSBusqueda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ontologias")
                        .HasColumnType("text");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<string>("SelectConsultaVirtuoso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID", "ChartID");

                    b.ToTable("FacetaConfigProyChart");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaConfigProyMapa", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("ColorRuta")
                        .HasColumnType("text");

                    b.Property<string>("PropLatitud")
                        .HasColumnType("text");

                    b.Property<string>("PropLongitud")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PropRuta")
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID");

                    b.ToTable("FacetaConfigProyMapa");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaConfigProyRangoFecha", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("PropiedadNueva")
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.Property<string>("PropiedadInicio")
                        .HasColumnType("text")
                        .HasColumnOrder(3);

                    b.Property<string>("PropiedadFin")
                        .HasColumnType("text")
                        .HasColumnOrder(4);

                    b.HasKey("OrganizacionID", "ProyectoID", "PropiedadNueva", "PropiedadInicio", "PropiedadFin");

                    b.ToTable("FacetaConfigProyRangoFecha");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaEntidadesExternas", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("EntidadID")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnOrder(2);

                    b.Property<bool>("BuscarConRecursividad")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsEntidadSecundaria")
                        .HasColumnType("boolean");

                    b.Property<string>("Grafo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("OrganizacionID", "ProyectoID", "EntidadID");

                    b.ToTable("FacetaEntidadesExternas");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaExcluida", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Faceta")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnOrder(2);

                    b.HasKey("OrganizacionID", "ProyectoID", "Faceta");

                    b.ToTable("FacetaExcluida");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaFiltroHome", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("ObjetoConocimiento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(2);

                    b.Property<string>("Faceta")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnOrder(3);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(4);

                    b.Property<string>("Filtro")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("character varying(280)");

                    b.HasKey("OrganizacionID", "ProyectoID", "ObjetoConocimiento", "Faceta", "Orden");

                    b.ToTable("FacetaFiltroHome");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaFiltroProyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("ObjetoConocimiento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(2);

                    b.Property<string>("Faceta")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnOrder(3);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(4);

                    b.Property<string>("Condicion")
                        .HasColumnType("text");

                    b.Property<string>("Filtro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID", "ObjetoConocimiento", "Faceta", "Orden");

                    b.ToTable("FacetaFiltroProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaHome", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("ObjetoConocimiento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(2);

                    b.Property<string>("Faceta")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnOrder(3);

                    b.Property<string>("FacetaObjetoConocimientoProyectoFaceta")
                        .HasColumnType("character varying(300)");

                    b.Property<string>("FacetaObjetoConocimientoProyectoObjetoConocimiento")
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("FacetaObjetoConocimientoProyectoOrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("FacetaObjetoConocimientoProyectoProyectoID")
                        .HasColumnType("uuid");

                    b.Property<bool>("MostrarVerMas")
                        .HasColumnType("boolean");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<string>("PestanyaFaceta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("OrganizacionID", "ProyectoID", "ObjetoConocimiento", "Faceta");

                    b.HasIndex("FacetaObjetoConocimientoProyectoOrganizacionID", "FacetaObjetoConocimientoProyectoProyectoID", "FacetaObjetoConocimientoProyectoObjetoConocimiento", "FacetaObjetoConocimientoProyectoFaceta");

                    b.ToTable("FacetaHome");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaMultiple", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("ObjetoConocimiento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(2);

                    b.Property<string>("Faceta")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnOrder(3);

                    b.Property<string>("Consulta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Filtro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("NumeroFacetasDesplegar")
                        .HasColumnType("smallint");

                    b.Property<short>("NumeroFacetasObtener")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID", "ProyectoID", "ObjetoConocimiento", "Faceta");

                    b.ToTable("FacetaMultiple");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaObjetoConocimiento", b =>
                {
                    b.Property<string>("ObjetoConocimiento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(0);

                    b.Property<string>("Faceta")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnOrder(1);

                    b.Property<short>("AlgoritmoTransformacion")
                        .HasColumnType("smallint");

                    b.Property<bool>("Autocompletar")
                        .HasColumnType("boolean");

                    b.Property<bool>("ComportamientoOr")
                        .HasColumnType("boolean");

                    b.Property<short>("ElementosVisibles")
                        .HasColumnType("smallint");

                    b.Property<bool>("EsPorDefecto")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsSemantica")
                        .HasColumnType("boolean");

                    b.Property<short>("Mayusculas")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreFaceta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<short>("TipoDisenio")
                        .HasColumnType("smallint");

                    b.Property<short?>("TipoPropiedad")
                        .HasColumnType("smallint");

                    b.HasKey("ObjetoConocimiento", "Faceta");

                    b.ToTable("FacetaObjetoConocimiento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaObjetoConocimientoProyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("ObjetoConocimiento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(2);

                    b.Property<string>("Faceta")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("AgrupacionID")
                        .HasColumnType("uuid");

                    b.Property<short>("AlgoritmoTransformacion")
                        .HasColumnType("smallint");

                    b.Property<bool>("Autocompletar")
                        .HasColumnType("boolean");

                    b.Property<short>("Comportamiento")
                        .HasColumnType("smallint");

                    b.Property<bool>("ComportamientoOr")
                        .HasColumnType("boolean");

                    b.Property<string>("Condicion")
                        .HasColumnType("text");

                    b.Property<short>("ElementosVisibles")
                        .HasColumnType("smallint");

                    b.Property<bool>("EsSemantica")
                        .HasColumnType("boolean");

                    b.Property<short?>("Excluida")
                        .HasColumnType("smallint");

                    b.Property<bool>("Excluyente")
                        .HasColumnType("boolean");

                    b.Property<string>("FacetaPrivadaParaGrupoEditores")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Inmutable")
                        .HasColumnType("boolean");

                    b.Property<short>("Mayusculas")
                        .HasColumnType("smallint");

                    b.Property<bool>("MostrarContador")
                        .HasColumnType("boolean");

                    b.Property<bool?>("MostrarSoloCaja")
                        .HasColumnType("boolean");

                    b.Property<string>("NivelSemantico")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("NombreFaceta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("Oculta")
                        .HasColumnType("boolean");

                    b.Property<bool>("OcultaEnFacetas")
                        .HasColumnType("boolean");

                    b.Property<bool>("OcultaEnFiltros")
                        .HasColumnType("boolean");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<bool>("PriorizarOrdenResultados")
                        .HasColumnType("boolean");

                    b.Property<short>("Reciproca")
                        .HasColumnType("smallint");

                    b.Property<string>("SubTipo")
                        .HasColumnType("text");

                    b.Property<short>("TipoDisenio")
                        .HasColumnType("smallint");

                    b.Property<short?>("TipoPropiedad")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID", "ProyectoID", "ObjetoConocimiento", "Faceta");

                    b.ToTable("FacetaObjetoConocimientoProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaObjetoConocimientoProyectoPestanya", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("ObjetoConocimiento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(2);

                    b.Property<string>("Faceta")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(4);

                    b.HasKey("OrganizacionID", "ProyectoID", "ObjetoConocimiento", "Faceta", "PestanyaID");

                    b.HasIndex("PestanyaID");

                    b.ToTable("FacetaObjetoConocimientoProyectoPestanya");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaRedireccion", b =>
                {
                    b.Property<string>("Faceta")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Faceta");

                    b.ToTable("FacetaRedireccion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.OntologiaProyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("OntologiaProyecto1")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("OntologiaProyecto")
                        .HasColumnOrder(2);

                    b.Property<bool>("CachearDatosSemanticos")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsBuscable")
                        .HasColumnType("boolean");

                    b.Property<string>("Namespace")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NamespacesExtra")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreCortoOnt")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("NombreOnt")
                        .HasColumnType("text");

                    b.Property<string>("SubTipos")
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID", "OntologiaProyecto1");

                    b.ToTable("OntologiaProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.GrupoOrgParticipaProy", b =>
                {
                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short>("TipoPerfil")
                        .HasColumnType("smallint");

                    b.HasKey("GrupoID", "OrganizacionID", "ProyectoID");

                    b.ToTable("GrupoOrgParticipaProy");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Amigo", b =>
                {
                    b.Property<Guid>("IdentidadAmigoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool>("EsFanMutuo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("IdentidadAmigoID", "IdentidadID");

                    b.ToTable("Amigo");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.AmigoAgGrupo", b =>
                {
                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("IdentidadAmigoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("GrupoAmigosGrupoID")
                        .HasColumnType("uuid");

                    b.HasKey("GrupoID", "IdentidadID", "IdentidadAmigoID");

                    b.HasIndex("GrupoAmigosGrupoID");

                    b.ToTable("AmigoAgGrupo");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.ContadorPerfil", b =>
                {
                    b.Property<Guid>("PerfilID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("FechaVisitaComentarios")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaVisitaSuscripciones")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("NuevasInvitaciones")
                        .HasColumnType("integer");

                    b.Property<int>("NuevasSuscripciones")
                        .HasColumnType("integer");

                    b.Property<int>("NuevosComentarios")
                        .HasColumnType("integer");

                    b.Property<int>("NumComentBlog")
                        .HasColumnType("integer");

                    b.Property<int>("NumComentContribuciones")
                        .HasColumnType("integer");

                    b.Property<int>("NumComentMisRec")
                        .HasColumnType("integer");

                    b.Property<int>("NumComentarios")
                        .HasColumnType("integer");

                    b.Property<int>("NumComentariosSinLeer")
                        .HasColumnType("integer");

                    b.Property<int>("NumInvitacionesSinLeer")
                        .HasColumnType("integer");

                    b.Property<int>("NumMensajesSinLeer")
                        .HasColumnType("integer");

                    b.Property<int>("NumNuevosMensajes")
                        .HasColumnType("integer");

                    b.Property<int>("NumSuscripcionesSinLeer")
                        .HasColumnType("integer");

                    b.HasKey("PerfilID");

                    b.ToTable("ContadorPerfil");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.DatoExtraEcosistemaOpcionPerfil", b =>
                {
                    b.Property<Guid>("DatoExtraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OpcionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("DatoExtraID", "OpcionID", "PerfilID");

                    b.HasIndex("PerfilID");

                    b.ToTable("DatoExtraEcosistemaOpcionPerfil");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.DatoExtraEcosistemaVirtuosoPerfil", b =>
                {
                    b.Property<Guid>("DatoExtraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Opcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("DatoExtraID", "PerfilID");

                    b.ToTable("DatoExtraEcosistemaVirtuosoPerfil");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.DatoExtraProyectoVirtuosoIdentidad", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("DatoExtraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<string>("Opcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("OrganizacionID", "ProyectoID", "DatoExtraID", "IdentidadID");

                    b.HasIndex("IdentidadID");

                    b.ToTable("DatoExtraProyectoVirtuosoIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoAmigos", b =>
                {
                    b.Property<Guid>("GrupoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Automatico")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("GrupoID");

                    b.ToTable("GrupoAmigos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoIdentidades", b =>
                {
                    b.Property<Guid>("GrupoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("NombreCorto")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<bool>("PermitirEnviarMensajes")
                        .HasColumnType("boolean");

                    b.Property<bool>("Publico")
                        .HasColumnType("boolean");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.HasKey("GrupoID");

                    b.ToTable("GrupoIdentidades");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoIdentidadesOrganizacion", b =>
                {
                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.HasKey("GrupoID", "OrganizacionID");

                    b.ToTable("GrupoIdentidadesOrganizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoIdentidadesParticipacion", b =>
                {
                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("GrupoID", "IdentidadID");

                    b.HasIndex("IdentidadID");

                    b.ToTable("GrupoIdentidadesParticipacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoIdentidadesProyecto", b =>
                {
                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("GrupoID", "OrganizacionID", "ProyectoID");

                    b.ToTable("GrupoIdentidadesProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Identidad", b =>
                {
                    b.Property<Guid>("IdentidadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("ActivoEnComunidad")
                        .HasColumnType("boolean");

                    b.Property<bool>("ActualizaHome")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("CurriculumID")
                        .HasColumnType("uuid");

                    b.Property<int>("DiasUltActualizacion")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaExpulsion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Foto")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("MostrarBienvenida")
                        .HasColumnType("boolean");

                    b.Property<string>("NombreCortoIdentidad")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int>("NumConnexiones")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<double?>("Rank")
                        .HasColumnType("double precision");

                    b.Property<bool>("RecibirNewsLetter")
                        .HasColumnType("boolean");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.Property<double>("ValorAbsoluto")
                        .HasColumnType("double precision");

                    b.HasKey("IdentidadID");

                    b.HasIndex("PerfilID");

                    b.ToTable("Identidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.IdentidadContadores", b =>
                {
                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.Property<int>("NumeroDescargas")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroVisitas")
                        .HasColumnType("integer");

                    b.HasKey("IdentidadID");

                    b.ToTable("IdentidadContadores");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.IdentidadContadoresRecursos", b =>
                {
                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.Property<string>("NombreSem")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnOrder(2);

                    b.Property<int>("Comentarios")
                        .HasColumnType("integer");

                    b.Property<int>("Compartidos")
                        .HasColumnType("integer");

                    b.Property<int>("Publicados")
                        .HasColumnType("integer");

                    b.HasKey("IdentidadID", "Tipo", "NombreSem");

                    b.ToTable("IdentidadContadoresRecursos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.OrganizacionClase", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Asignatura")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Centro")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("CursoAcademico")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Grupo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NombreCortoAsig")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("NombreCortoCentro")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<short>("TipoClase")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID");

                    b.ToTable("OrganizacionClase");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Perfil", b =>
                {
                    b.Property<Guid>("PerfilID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CaducidadResSusc")
                        .HasColumnType("integer");

                    b.Property<Guid?>("CurriculumID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CurriculumPerfilID")
                        .HasColumnType("uuid");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<string>("NombreCortoOrg")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NombreCortoUsu")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NombreOrganizacion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NombrePerfil")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<Guid?>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PersonaID")
                        .HasColumnType("uuid");

                    b.Property<bool>("TieneTwitter")
                        .HasColumnType("boolean");

                    b.Property<string>("TokenSecretoTwitter")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("TokenTwitter")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("UsuarioTwitter")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("PerfilID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.PerfilGadget", b =>
                {
                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("GadgetID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("PerfilID", "GadgetID");

                    b.ToTable("PerfilGadget");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.PerfilOrganizacion", b =>
                {
                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.HasKey("PerfilID", "OrganizacionID");

                    b.ToTable("PerfilOrganizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.PerfilPersona", b =>
                {
                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uuid");

                    b.HasKey("PerfilID");

                    b.ToTable("PerfilPersona");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.PerfilPersonaOrg", b =>
                {
                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("PersonaID", "OrganizacionID", "PerfilID");

                    b.HasIndex("PerfilID");

                    b.ToTable("PerfilPersonaOrg");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.PerfilRedesSociales", b =>
                {
                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("NombreRedSocial")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<string>("TokenSecreto")
                        .HasColumnType("text");

                    b.Property<string>("Usuario")
                        .HasColumnType("text");

                    b.Property<string>("urlUsuario")
                        .HasColumnType("text");

                    b.HasKey("PerfilID", "NombreRedSocial");

                    b.ToTable("PerfilRedesSociales");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.PermisoAmigoOrg", b =>
                {
                    b.Property<Guid>("IdentidadOrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("IdentidadUsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("IdentidadAmigoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("IdentidadOrganizacionID", "IdentidadUsuarioID", "IdentidadAmigoID");

                    b.ToTable("PermisoAmigoOrg");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.PermisoGrupoAmigoOrg", b =>
                {
                    b.Property<Guid>("IdentidadOrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("IdentidadUsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<bool>("PermisoEdicion")
                        .HasColumnType("boolean");

                    b.HasKey("IdentidadOrganizacionID", "IdentidadUsuarioID", "GrupoID");

                    b.ToTable("PermisoGrupoAmigoOrg");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.PersonaVisibleEnOrg", b =>
                {
                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.HasKey("PersonaID", "OrganizacionID");

                    b.ToTable("PersonaVisibleEnOrg");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Profesor", b =>
                {
                    b.Property<Guid>("ProfesorID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("AreaEstudios")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("CentroEstudios")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("ProfesorID", "PerfilID");

                    b.HasIndex("PerfilID");

                    b.ToTable("Profesor");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IntegracionContinuaPropiedad", b =>
                {
                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<short>("TipoObjeto")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.Property<string>("ObjetoPropiedad")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnOrder(2);

                    b.Property<short>("TipoPropiedad")
                        .HasColumnType("smallint")
                        .HasColumnOrder(3);

                    b.Property<bool>("MismoValor")
                        .HasColumnType("boolean")
                        .HasColumnOrder(6);

                    b.Property<bool>("Revisada")
                        .HasColumnType("boolean")
                        .HasColumnOrder(7);

                    b.Property<string>("ValorPropiedad")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(4);

                    b.Property<string>("ValorPropiedadDestino")
                        .HasColumnType("text")
                        .HasColumnOrder(5);

                    b.HasKey("ProyectoID", "TipoObjeto", "ObjetoPropiedad", "TipoPropiedad");

                    b.ToTable("IntegracionContinuaPropiedad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.MVC.CorreoInterno", b =>
                {
                    b.Property<Guid>("CorreoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("Autor")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ConversacionID")
                        .HasColumnType("uuid");

                    b.Property<string>("Cuerpo")
                        .HasColumnType("text");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnPapelera")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("CorreoID");

                    b.ToTable("CorreoInterno");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.ColaTwitter", b =>
                {
                    b.Property<int>("ColaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ColaID"));

                    b.Property<string>("ConsumerKey")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ConsumerSecret")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Enlace")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<short>("NumIntentos")
                        .HasColumnType("smallint");

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid");

                    b.Property<string>("TokenSecretoTwitter")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("TokenTwitter")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("ColaID");

                    b.ToTable("ColaTwitter");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.EmailIncorrecto", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Email");

                    b.ToTable("EmailIncorrecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.Invitacion", b =>
                {
                    b.Property<Guid>("InvitacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ElementoVinculadoID")
                        .HasColumnType("uuid");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaInvitacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaProcesado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("IdentidadDestinoID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdentidadOrigenID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("NotificacionID")
                        .HasColumnType("uuid");

                    b.Property<short>("TipoInvitacion")
                        .HasColumnType("smallint");

                    b.HasKey("InvitacionID");

                    b.HasIndex("NotificacionID");

                    b.ToTable("Invitacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.Notificacion", b =>
                {
                    b.Property<Guid>("NotificacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaNotificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Idioma")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<short>("MensajeID")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("NotificacionID");

                    b.ToTable("Notificacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionAlertaPersona", b =>
                {
                    b.Property<Guid>("NotificacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("FechaLectura")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("NotificacionID", "PersonaID");

                    b.ToTable("NotificacionAlertaPersona");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionCorreoPersona", b =>
                {
                    b.Property<Guid>("NotificacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("EmailEnvio")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)")
                        .HasColumnOrder(1);

                    b.Property<bool>("EnviadoRabbit")
                        .HasColumnType("boolean");

                    b.Property<short?>("EstadoEnvio")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FechaEnvio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("OrganizacionPersonaID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PersonaID")
                        .HasColumnType("uuid");

                    b.HasKey("NotificacionID", "EmailEnvio");

                    b.ToTable("NotificacionCorreoPersona");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionEnvioMasivo", b =>
                {
                    b.Property<Guid>("NotificacionID")
                        .HasColumnType("uuid");

                    b.Property<string>("Destinatarios")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("EstadoEnvio")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FechaEnvio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short>("Prioridad")
                        .HasColumnType("smallint");

                    b.HasKey("NotificacionID");

                    b.ToTable("NotificacionEnvioMasivo");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionParametro", b =>
                {
                    b.Property<Guid>("NotificacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<short>("ParametroID")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.Property<string>("Valor")
                        .HasColumnType("text");

                    b.HasKey("NotificacionID", "ParametroID");

                    b.ToTable("NotificacionParametro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionParametroPersona", b =>
                {
                    b.Property<Guid>("NotificacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<short>("ParametroID")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NotificacionID", "ParametroID", "PersonaID");

                    b.ToTable("NotificacionParametroPersona");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionSolicitud", b =>
                {
                    b.Property<Guid>("NotificacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("SolicitudID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.HasKey("NotificacionID", "SolicitudID", "OrganizacionID", "ProyectoID");

                    b.HasIndex("SolicitudID");

                    b.ToTable("NotificacionSolicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionSuscripcion", b =>
                {
                    b.Property<Guid>("NotificacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("SuscripcionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.HasKey("NotificacionID", "SuscripcionID");

                    b.ToTable("NotificacionSuscripcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.ConfiguracionGnossOrg", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<bool>("VerRecursos")
                        .HasColumnType("boolean");

                    b.Property<bool>("VerRecursosExterno")
                        .HasColumnType("boolean");

                    b.Property<short>("VisibilidadContactos")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID");

                    b.ToTable("ConfiguracionGnossOrg");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.Organizacion", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alias")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("CP")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("CoordenadasLogo")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Eliminada")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("EsBuscable")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsBuscableExternos")
                        .HasColumnType("boolean");

                    b.Property<string>("Fax")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Localidad")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("Logotipo")
                        .HasColumnType("bytea");

                    b.Property<bool>("ModoPersonal")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NombreCorto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("OrganizacionPadreID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PaisID")
                        .HasColumnType("uuid");

                    b.Property<string>("Provincia")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("ProvinciaID")
                        .HasColumnType("uuid");

                    b.Property<int>("TablaBaseOrganizacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TablaBaseOrganizacionID"));

                    b.Property<string>("Telefono")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<int?>("VersionLogo")
                        .HasColumnType("integer");

                    b.Property<string>("Web")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("OrganizacionID");

                    b.HasIndex("OrganizacionPadreID");

                    b.ToTable("Organizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.OrganizacionEmpresa", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<string>("CIF")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<int?>("Empleados")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short>("SectorOrganizacion")
                        .HasColumnType("smallint");

                    b.Property<short>("TipoOrganizacion")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID");

                    b.ToTable("OrganizacionEmpresa");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.OrganizacionGnoss", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.HasKey("OrganizacionID");

                    b.ToTable("OrganizacionGnoss");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.OrganizacionParticipaProy", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<bool>("EstaBloqueada")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.Property<short>("RegistroAutomatico")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID", "OrganizacionProyectoID", "ProyectoID");

                    b.HasIndex("IdentidadID");

                    b.ToTable("OrganizacionParticipaProy");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.PersonaOcupacionFigura", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("EstructuraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ElementoEstructuraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(4);

                    b.Property<int>("Dedicacion")
                        .HasColumnType("integer");

                    b.Property<bool>("EsPropietarioFigura")
                        .HasColumnType("boolean");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("OrganizacionPersonalID")
                        .HasColumnType("uuid");

                    b.HasKey("OrganizacionID", "ProyectoID", "EstructuraID", "ElementoEstructuraID", "PersonaID");

                    b.ToTable("PersonaOcupacionFigura");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.PersonaOcupacionFormaSec", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("EstructuraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ElementoEstructuraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(4);

                    b.Property<int>("Dedicacion")
                        .HasColumnType("integer");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("OrganizacionPersonalID")
                        .HasColumnType("uuid");

                    b.HasKey("OrganizacionID", "ProyectoID", "EstructuraID", "ElementoEstructuraID", "PersonaID");

                    b.ToTable("PersonaOcupacionFormaSec");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.PersonaVinculoOrganizacion", b =>
                {
                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("CPTrabajo")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Cargo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("CategoriaProfesionalID")
                        .HasColumnType("uuid");

                    b.Property<string>("CoordenadasFoto")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DireccionTrabajo")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("EmailTrabajo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Extension")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("FechaAnadidaFoto")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaVinculacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("bytea");

                    b.Property<string>("LocalidadTrabajo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("PaisTrabajoID")
                        .HasColumnType("uuid");

                    b.Property<string>("ProvinciaTrabajo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("ProvinciaTrabajoID")
                        .HasColumnType("uuid");

                    b.Property<string>("TelefonoMovilTrabajo")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("TelefonoTrabajo")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<Guid?>("TipoContratoID")
                        .HasColumnType("uuid");

                    b.Property<bool>("UsarFotoPersonal")
                        .HasColumnType("boolean");

                    b.Property<int?>("VersionFoto")
                        .HasColumnType("integer");

                    b.HasKey("PersonaID", "OrganizacionID");

                    b.HasIndex("OrganizacionID");

                    b.ToTable("PersonaVinculoOrganizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Pais.Pais", b =>
                {
                    b.Property<Guid>("PaisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("PaisID");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Pais.Provincia", b =>
                {
                    b.Property<Guid>("ProvinciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CP")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("PaisID")
                        .HasColumnType("uuid");

                    b.HasKey("ProvinciaID");

                    b.HasIndex("PaisID");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ParametroGeneralDS.ConfiguracionAmbitoBusqueda", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("DefectoHome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<bool>("Metabusqueda")
                        .HasColumnType("boolean");

                    b.Property<string>("NombreAmbitoTodaComunidad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<bool>("TodoGnoss")
                        .HasColumnType("boolean");

                    b.HasKey("OrganizacionID", "ProyectoID");

                    b.ToTable("ConfiguracionAmbitoBusqueda");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ParametroGeneralDS.ParametroGeneral", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("AlgoritmoPersonasRecomendadas")
                        .HasColumnType("text");

                    b.Property<bool>("AvisoCookie")
                        .HasColumnType("boolean");

                    b.Property<string>("AvisoLegal")
                        .HasColumnType("text");

                    b.Property<bool>("BaseRecursosDisponible")
                        .HasColumnType("boolean");

                    b.Property<bool>("BiosCortas")
                        .HasColumnType("boolean");

                    b.Property<bool>("BlogsDisponibles")
                        .HasColumnType("boolean");

                    b.Property<bool>("BrightcoveDisponible")
                        .HasColumnType("boolean");

                    b.Property<string>("BrightcoveFTP")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BrightcoveFTPPass")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BrightcoveFTPUser")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BrightcovePublisherID")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BrightcoveReproductorID")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BrightcoveTokenRead")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BrightcoveTokenWrite")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("CMSDisponible")
                        .HasColumnType("boolean");

                    b.Property<bool>("CargasMasivasDisponibles")
                        .HasColumnType("boolean");

                    b.Property<bool>("ChatDisponible")
                        .HasColumnType("boolean");

                    b.Property<bool>("ClausulasRegistro")
                        .HasColumnType("boolean");

                    b.Property<string>("CodigoGoogleAnalytics")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<bool>("ComentariosDisponibles")
                        .HasColumnType("boolean");

                    b.Property<bool>("CompartirRecursosPermitido")
                        .HasColumnType("boolean");

                    b.Property<bool>("ComunidadGNOSS")
                        .HasColumnType("boolean");

                    b.Property<string>("CoordenadasHome")
                        .HasMaxLength(30)
                        .HasColumnType("character(30)")
                        .IsFixedLength();

                    b.Property<string>("CoordenadasMosaico")
                        .HasMaxLength(30)
                        .HasColumnType("character(30)")
                        .IsFixedLength();

                    b.Property<string>("CoordenadasSup")
                        .HasMaxLength(30)
                        .HasColumnType("character(30)")
                        .IsFixedLength();

                    b.Property<string>("Copyright")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("DafoDisponible")
                        .HasColumnType("boolean");

                    b.Property<bool>("DebatesDisponibles")
                        .HasColumnType("boolean");

                    b.Property<float?>("DesviacionAdmitidaEnEvalua")
                        .HasColumnType("real");

                    b.Property<bool>("EncuestasDisponibles")
                        .HasColumnType("boolean");

                    b.Property<string>("EnlaceContactoPiePagina")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("character varying(45)");

                    b.Property<bool>("EntidadRevisadaObligatoria")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnvioMensajesPermitido")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsBeta")
                        .HasColumnType("boolean");

                    b.Property<bool>("EventosDisponibles")
                        .HasColumnType("boolean");

                    b.Property<bool>("FechaNacimientoObligatoria")
                        .HasColumnType("boolean");

                    b.Property<bool>("ForosDisponibles")
                        .HasColumnType("boolean");

                    b.Property<bool>("GadgetsCabeceraDisponibles")
                        .HasColumnType("boolean");

                    b.Property<bool>("GadgetsPieDisponibles")
                        .HasColumnType("boolean");

                    b.Property<bool>("HomeVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("IdiomaDefecto")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IdiomasDisponibles")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("ImagenHome")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("ImagenHomeGrande")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("ImagenPersonalizadaPeque")
                        .HasColumnType("bytea");

                    b.Property<bool>("ImagenRelacionadosMini")
                        .HasColumnType("boolean");

                    b.Property<bool>("InvitacionesDisponibles")
                        .HasColumnType("boolean");

                    b.Property<bool>("InvitacionesPorContactoDisponibles")
                        .HasColumnType("boolean");

                    b.Property<string>("LicenciaPorDefecto")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<byte[]>("LogoProyecto")
                        .HasColumnType("bytea");

                    b.Property<string>("MensajeBienvenida")
                        .HasColumnType("text");

                    b.Property<string>("MensajeLicenciaPorDefecto")
                        .HasColumnType("text");

                    b.Property<short?>("MetaAutomatPropietarioPro")
                        .HasColumnType("smallint");

                    b.Property<bool>("MostrarAccionesEnListados")
                        .HasColumnType("boolean");

                    b.Property<bool>("MostrarPersonasEnCatalogo")
                        .HasColumnType("boolean");

                    b.Property<string>("NombreAmenazaDafoGF")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreAmenazaDafoObj")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreAmenazaDafoProc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreDebilidadDafoGF")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreDebilidadDafoObj")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreDebilidadDafoProc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreFortalezaDafoGF")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreFortalezaDafoObj")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreFortalezaDafoProc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreImagenPeque")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NombreOportunidadDafoGF")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreOportunidadDafoObj")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreOportunidadDafoProc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<short>("NumeroRecursosRelacionados")
                        .HasColumnType("smallint");

                    b.Property<bool>("OcultarPersonalizacion")
                        .HasColumnType("boolean");

                    b.Property<bool>("PalcoActivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermitirCertificacionRec")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermitirRecursosPrivados")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermitirRevisionManualComp")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermitirRevisionManualGF")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermitirRevisionManualObj")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermitirRevisionManualPro")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermitirUsuNoLoginDescargDoc")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermitirVotacionesNegativas")
                        .HasColumnType("boolean");

                    b.Property<bool>("PestanyaRecursosVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("PestanyasDocSemanticos")
                        .HasColumnType("text");

                    b.Property<bool>("PlantillaDisponible")
                        .HasColumnType("boolean");

                    b.Property<short>("PlataformaVideoDisponible")
                        .HasColumnType("smallint");

                    b.Property<string>("PoliticaCertificacion")
                        .HasColumnType("text");

                    b.Property<bool>("PreguntasDisponibles")
                        .HasColumnType("boolean");

                    b.Property<bool>("PrivacidadObligatoria")
                        .HasColumnType("boolean");

                    b.Property<string>("PropsMapaPerYOrg")
                        .HasColumnType("text");

                    b.Property<bool>("RdfDisponibles")
                        .HasColumnType("boolean");

                    b.Property<bool>("RegDidactalia")
                        .HasColumnType("boolean");

                    b.Property<bool>("RssDisponibles")
                        .HasColumnType("boolean");

                    b.Property<string>("RutaImagenesTema")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("RutaTema")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ScriptBusqueda")
                        .HasColumnType("text");

                    b.Property<string>("ScriptGoogleAnalytics")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("ServicioSuscripcionDisp")
                        .HasColumnType("boolean");

                    b.Property<bool>("SolicitarCoockieLogin")
                        .HasColumnType("boolean");

                    b.Property<bool>("SupervisoresAdminGrupos")
                        .HasColumnType("boolean");

                    b.Property<string>("TOPFTPPass")
                        .HasColumnType("text");

                    b.Property<string>("TOPFTPUser")
                        .HasColumnType("text");

                    b.Property<string>("TOPIDCuenta")
                        .HasColumnType("text");

                    b.Property<string>("TOPIDPlayer")
                        .HasColumnType("text");

                    b.Property<string>("TOPPublisherID")
                        .HasColumnType("text");

                    b.Property<bool>("TieneSitemapComunidad")
                        .HasColumnType("boolean");

                    b.Property<short?>("TipoCabecera")
                        .HasColumnType("smallint");

                    b.Property<short?>("TipoFichaRecurso")
                        .HasColumnType("smallint");

                    b.Property<float?>("UmbralDetPropietariosGF")
                        .HasColumnType("real");

                    b.Property<float?>("UmbralDetPropietariosObj")
                        .HasColumnType("real");

                    b.Property<float?>("UmbralDetPropietariosProc")
                        .HasColumnType("real");

                    b.Property<float?>("UmbralSuficienciaEnMejora")
                        .HasColumnType("real");

                    b.Property<string>("UrlMappingCategorias")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("UrlServicioFichas")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("VerVotaciones")
                        .HasColumnType("boolean");

                    b.Property<int?>("VersionCSS")
                        .HasColumnType("integer");

                    b.Property<short?>("VersionCSSAdmin")
                        .HasColumnType("smallint");

                    b.Property<int?>("VersionCSSWidget")
                        .HasColumnType("integer");

                    b.Property<int?>("VersionFotoImagenFondo")
                        .HasColumnType("integer");

                    b.Property<int?>("VersionFotoImagenHomeGrande")
                        .HasColumnType("integer");

                    b.Property<int?>("VersionFotoImagenMosaicoGrande")
                        .HasColumnType("integer");

                    b.Property<int?>("VersionFotoImagenSupGrande")
                        .HasColumnType("integer");

                    b.Property<int?>("VersionJS")
                        .HasColumnType("integer");

                    b.Property<short?>("VersionJSAdmin")
                        .HasColumnType("smallint");

                    b.Property<bool>("VotacionesDisponibles")
                        .HasColumnType("boolean");

                    b.Property<bool>("WikiDisponible")
                        .HasColumnType("boolean");

                    b.HasKey("OrganizacionID", "ProyectoID");

                    b.ToTable("ParametroGeneral");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ParametroGeneralDS.ParametroProyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Parametro")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Valor")
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID", "Parametro");

                    b.ToTable("ParametroProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ParametroGeneralDS.ProyectoElementoHTMLRol", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<int>("ElementoHeadID")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.HasKey("OrganizacionID", "ProyectoID", "ElementoHeadID", "GrupoID");

                    b.ToTable("ProyectoElementoHTMLRol");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ParametroGeneralDS.ProyectoElementoHtml", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<int>("ElementoHeadID")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<string>("Atributos")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("CargarSinAceptarCookies")
                        .HasColumnType("boolean");

                    b.Property<string>("Contenido")
                        .HasColumnType("text");

                    b.Property<string>("Etiqueta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Privado")
                        .HasColumnType("boolean");

                    b.Property<short>("Ubicacion")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID", "ProyectoID", "ElementoHeadID");

                    b.ToTable("ProyectoElementoHtml");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ParametroGeneralDS.ProyectoMetaRobots", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<string>("Content")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("OrganizacionID", "ProyectoID", "Tipo");

                    b.ToTable("ProyectoMetaRobots");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ParametroGeneralDS.ProyectoRDFType", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("TipoDocumento")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<string>("RdfType")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("OrganizacionID", "ProyectoID", "TipoDocumento");

                    b.ToTable("ProyectoRDFType");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ParametroGeneralDS.TextosPersonalizadosPersonalizacion", b =>
                {
                    b.Property<Guid>("PersonalizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("TextoID")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.Property<string>("Language")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Texto")
                        .HasColumnType("text");

                    b.HasKey("PersonalizacionID", "TextoID", "Language");

                    b.ToTable("TextosPersonalizadosPersonalizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ParametroGeneralDS.TextosPersonalizadosProyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("TextoID")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Language")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(3);

                    b.Property<string>("Texto")
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID", "TextoID", "Language");

                    b.ToTable("TextosPersonalizadosProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.PermisosPaginasUsuarios", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<short>("Pagina")
                        .HasColumnType("smallint")
                        .HasColumnOrder(3);

                    b.HasKey("UsuarioID", "OrganizacionID", "ProyectoID", "Pagina");

                    b.ToTable("PermisosPaginasUsuarios");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.ConfiguracionGnossPersona", b =>
                {
                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uuid");

                    b.Property<short>("BoletinSuscripcion")
                        .HasColumnType("smallint");

                    b.Property<bool>("ComentariosRecursos")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnviarEnlaces")
                        .HasColumnType("boolean");

                    b.Property<bool>("InvitacionComunidad")
                        .HasColumnType("boolean");

                    b.Property<bool>("InvitacionOrganizacion")
                        .HasColumnType("boolean");

                    b.Property<bool>("MensajesGnoss")
                        .HasColumnType("boolean");

                    b.Property<bool>("SolicitudesContacto")
                        .HasColumnType("boolean");

                    b.Property<bool>("VerAmigos")
                        .HasColumnType("boolean");

                    b.Property<bool>("VerAmigosExterno")
                        .HasColumnType("boolean");

                    b.Property<bool>("VerRecursos")
                        .HasColumnType("boolean");

                    b.Property<bool>("VerRecursosExterno")
                        .HasColumnType("boolean");

                    b.HasKey("PersonaID");

                    b.ToTable("ConfiguracionGnossPersona");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.Curriculum", b =>
                {
                    b.Property<Guid>("CurriculumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Publicado")
                        .HasColumnType("boolean");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<int>("TipoVisibilidad")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<bool>("UsaDatosPersonalesPerfil")
                        .HasColumnType("boolean");

                    b.HasKey("CurriculumID");

                    b.ToTable("Curriculum");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.DatosTrabajoPersonaLibre", b =>
                {
                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uuid");

                    b.Property<string>("CPTrabajo")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("DireccionTrabajo")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("EmailTrabajo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("LocalidadTrabajo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("PaisTrabajoID")
                        .HasColumnType("uuid");

                    b.Property<string>("Profesion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("ProvinciaTrabajo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("ProvinciaTrabajoID")
                        .HasColumnType("uuid");

                    b.Property<string>("TelefonoMovilTrabajo")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("TelefonoTrabajo")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.HasKey("PersonaID");

                    b.ToTable("DatosTrabajoPersonaLibre");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.Persona", b =>
                {
                    b.Property<Guid>("PersonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("CPPersonal")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("CoordenadasFoto")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DireccionPersonal")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("EmailTutor")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("EsBuscable")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsBuscableExternos")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("EstadoCivilID")
                        .HasColumnType("uuid");

                    b.Property<short>("EstadoCorreccion")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FechaAnadidaFoto")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaNotificacionCorreccion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("bytea");

                    b.Property<short?>("Hijos")
                        .HasColumnType("smallint");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("LocalidadPersonal")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("PaisPersonalID")
                        .HasColumnType("uuid");

                    b.Property<string>("ProvinciaPersonal")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("ProvinciaPersonalID")
                        .HasColumnType("uuid");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character(1)")
                        .IsFixedLength();

                    b.Property<string>("TelefonoPersonal")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<short?>("TipoDocumentoAcreditativo")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("TitulacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UsuarioID")
                        .HasColumnType("uuid");

                    b.Property<string>("ValorDocumentoAcreditativo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("VersionFoto")
                        .HasColumnType("integer");

                    b.HasKey("PersonaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.Peticion", b =>
                {
                    b.Property<Guid>("PeticionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<short>("Estado")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("FechaPeticion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaProcesado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("UsuarioID")
                        .HasColumnType("uuid");

                    b.HasKey("PeticionID");

                    b.ToTable("Peticion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionInvitaContacto", b =>
                {
                    b.Property<Guid>("PeticionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.HasKey("PeticionID");

                    b.ToTable("PeticionInvitaContacto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionInvitacionComunidad", b =>
                {
                    b.Property<Guid>("PeticionID")
                        .HasColumnType("uuid");

                    b.Property<string>("NingID")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("PeticionID");

                    b.ToTable("PeticionInvitacionComunidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionInvitacionGrupo", b =>
                {
                    b.Property<Guid>("PeticionID")
                        .HasColumnType("uuid");

                    b.Property<string>("GruposID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("PeticionID");

                    b.ToTable("PeticionInvitacionGrupo");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionNuevoProyecto", b =>
                {
                    b.Property<Guid>("PeticionID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ComunidadPrivadaPadreID")
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("IdiomaDefecto")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreCorto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PerfilCreadorID")
                        .HasColumnType("uuid");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.HasKey("PeticionID");

                    b.ToTable("PeticionNuevoProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionOrgInvitaPers", b =>
                {
                    b.Property<Guid>("PeticionID")
                        .HasColumnType("uuid");

                    b.Property<string>("Cargo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.HasKey("PeticionID");

                    b.ToTable("PeticionOrgInvitaPers");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.AccionesExternasProyecto", b =>
                {
                    b.Property<short>("TipoAccion")
                        .HasColumnType("smallint")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TipoAccion", "OrganizacionID", "ProyectoID");

                    b.ToTable("AccionesExternasProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.AdministradorGrupoProyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("OrganizacionID", "ProyectoID", "GrupoID");

                    b.ToTable("AdministradorGrupoProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.AdministradorProyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint")
                        .HasColumnOrder(3);

                    b.HasKey("OrganizacionID", "ProyectoID", "UsuarioID", "Tipo");

                    b.ToTable("AdministradorProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.CamposRegistroProyectoGenericos", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID", "ProyectoID", "Orden");

                    b.ToTable("CamposRegistroProyectoGenericos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ConfigAutocompletarProy", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Clave")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("PestanyaID")
                        .HasColumnType("uuid");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID", "Clave");

                    b.HasIndex("PestanyaID");

                    b.ToTable("ConfigAutocompletarProy");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ConfigSearchProy", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Clave")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID", "Clave");

                    b.ToTable("ConfigSearchProy");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraEcosistema", b =>
                {
                    b.Property<Guid>("DatoExtraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Obligatorio")
                        .HasColumnType("boolean");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<bool>("Paso1Registro")
                        .HasColumnType("boolean");

                    b.Property<string>("PredicadoRDF")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("DatoExtraID");

                    b.ToTable("DatoExtraEcosistema");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraEcosistemaOpcion", b =>
                {
                    b.Property<Guid>("DatoExtraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OpcionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Opcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.HasKey("DatoExtraID", "OpcionID");

                    b.ToTable("DatoExtraEcosistemaOpcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraEcosistemaVirtuoso", b =>
                {
                    b.Property<Guid>("DatoExtraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConexionBD")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("EstructuraHTMLFicha")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("InputID")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("InputsSuperiores")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("NombreCampo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("Obligatorio")
                        .HasColumnType("boolean");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<bool>("Paso1Registro")
                        .HasColumnType("boolean");

                    b.Property<string>("PredicadoRDF")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("QueryVirtuoso")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("VisibilidadFichaPerfil")
                        .HasColumnType("boolean");

                    b.HasKey("DatoExtraID");

                    b.ToTable("DatoExtraEcosistemaVirtuoso");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraProyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("DatoExtraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("NombreCorto")
                        .HasColumnType("text");

                    b.Property<bool>("Obligatorio")
                        .HasColumnType("boolean");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<bool>("Paso1Registro")
                        .HasColumnType("boolean");

                    b.Property<string>("PredicadoRDF")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("VisiblePerfil")
                        .HasColumnType("boolean");

                    b.HasKey("OrganizacionID", "ProyectoID", "DatoExtraID");

                    b.ToTable("DatoExtraProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraProyectoOpcion", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("DatoExtraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("OpcionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<string>("Opcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.HasKey("OrganizacionID", "ProyectoID", "DatoExtraID", "OpcionID");

                    b.ToTable("DatoExtraProyectoOpcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraProyectoOpcionIdentidad", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("DatoExtraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("OpcionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(4);

                    b.HasKey("OrganizacionID", "ProyectoID", "DatoExtraID", "OpcionID", "IdentidadID");

                    b.HasIndex("IdentidadID");

                    b.ToTable("DatoExtraProyectoOpcionIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraProyectoVirtuoso", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("DatoExtraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("ConexionBD")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("EstructuraHTMLFicha")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("InputID")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("InputsSuperiores")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("NombreCampo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("Obligatorio")
                        .HasColumnType("boolean");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<bool>("Paso1Registro")
                        .HasColumnType("boolean");

                    b.Property<string>("PredicadoRDF")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("QueryVirtuoso")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("VisibilidadFichaPerfil")
                        .HasColumnType("boolean");

                    b.HasKey("OrganizacionID", "ProyectoID", "DatoExtraID");

                    b.ToTable("DatoExtraProyectoVirtuoso");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.EcosistemaServicioExterno", b =>
                {
                    b.Property<string>("NombreServicio")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("character varying(150)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UrlServicio")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.HasKey("NombreServicio");

                    b.ToTable("EcosistemaServicioExterno");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.NivelCertificacion", b =>
                {
                    b.Property<Guid>("NivelCertificacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("NivelCertificacionID");

                    b.HasIndex("OrganizacionID", "ProyectoID");

                    b.ToTable("NivelCertificacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PreferenciaProyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("CategoriaTesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.HasKey("OrganizacionID", "ProyectoID", "TesauroID", "CategoriaTesauroID");

                    b.ToTable("PreferenciaProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionListadoSemantico", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OntologiaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(3);

                    b.Property<bool>("MostrarEnAutocompletar")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Ontologia")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Propiedad")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.HasKey("OrganizacionID", "ProyectoID", "OntologiaID", "Orden");

                    b.ToTable("PresentacionListadoSemantico");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionMapaSemantico", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OntologiaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(3);

                    b.Property<bool>("MostrarEnAutocompletar")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Ontologia")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Propiedad")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.HasKey("OrganizacionID", "ProyectoID", "OntologiaID", "Orden");

                    b.ToTable("PresentacionMapaSemantico");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionMosaicoSemantico", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OntologiaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(3);

                    b.Property<bool>("MostrarEnAutocompletar")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Ontologia")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Propiedad")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.HasKey("OrganizacionID", "ProyectoID", "OntologiaID", "Orden");

                    b.ToTable("PresentacionMosaicoSemantico");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionPersonalizadoSemantico", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OntologiaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(3);

                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<string>("Ontologia")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Select")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Where")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID", "OntologiaID", "Orden");

                    b.ToTable("PresentacionPersonalizadoSemantico");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionPestanyaListadoSemantico", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("OntologiaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(4);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Ontologia")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Propiedad")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.HasKey("OrganizacionID", "ProyectoID", "PestanyaID", "OntologiaID", "Orden");

                    b.HasIndex("PestanyaID");

                    b.ToTable("PresentacionPestanyaListadoSemantico");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionPestanyaMapaSemantico", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("OntologiaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(4);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Ontologia")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Propiedad")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.HasKey("OrganizacionID", "ProyectoID", "PestanyaID", "OntologiaID", "Orden");

                    b.HasIndex("PestanyaID");

                    b.ToTable("PresentacionPestanyaMapaSemantico");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionPestanyaMosaicoSemantico", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("OntologiaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(4);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Ontologia")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Propiedad")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.HasKey("OrganizacionID", "ProyectoID", "PestanyaID", "OntologiaID", "Orden");

                    b.HasIndex("PestanyaID");

                    b.ToTable("PresentacionPestanyaMosaicoSemantico");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyTipoRecNoActivReciente", b =>
                {
                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<short>("TipoRecurso")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.Property<string>("OntologiasID")
                        .HasColumnType("text");

                    b.HasKey("ProyectoID", "TipoRecurso");

                    b.ToTable("ProyTipoRecNoActivReciente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<bool>("EnviarTwitterComentario")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnviarTwitterNuevaCat")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnviarTwitterNuevaPolitCert")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnviarTwitterNuevoAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnviarTwitterNuevoTipoDoc")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsProyectoDestacado")
                        .HasColumnType("boolean");

                    b.Property<short>("Estado")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("NombreCorto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NombrePresentacion")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int?>("NumeroArticulos")
                        .HasColumnType("integer");

                    b.Property<int?>("NumeroDafos")
                        .HasColumnType("integer");

                    b.Property<int?>("NumeroDebates")
                        .HasColumnType("integer");

                    b.Property<int?>("NumeroForos")
                        .HasColumnType("integer");

                    b.Property<int?>("NumeroMiembros")
                        .HasColumnType("integer");

                    b.Property<int?>("NumeroOrgRegistradas")
                        .HasColumnType("integer");

                    b.Property<int?>("NumeroPreguntas")
                        .HasColumnType("integer");

                    b.Property<int?>("NumeroRecursos")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ProcesoVinculadoID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProyectoSuperiorID")
                        .HasColumnType("uuid");

                    b.Property<int>("TablaBaseProyectoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TablaBaseProyectoID"));

                    b.Property<string>("TagTwitter")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("TagTwitterGnoss")
                        .HasColumnType("boolean");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<bool>("TieneTwitter")
                        .HasColumnType("boolean");

                    b.Property<short>("TipoAcceso")
                        .HasColumnType("smallint");

                    b.Property<short>("TipoProyecto")
                        .HasColumnType("smallint");

                    b.Property<string>("TokenSecretoTwitter")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("TokenTwitter")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("URLPropia")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("UsuarioTwitter")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("OrganizacionID", "ProyectoID");

                    b.HasIndex("OrganizacionID", "ProyectoSuperiorID");

                    b.ToTable("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoAgCatTesauro", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("CategoriaTesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.HasKey("OrganizacionID", "ProyectoID", "TesauroID", "CategoriaTesauroID");

                    b.ToTable("ProyectoAgCatTesauro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoCerradoTmp", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("FechaCierre")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaReapertura")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.HasKey("OrganizacionID", "ProyectoID");

                    b.ToTable("ProyectoCerradoTmp");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoCerrandose", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("FechaCierre")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PeriodoDeGracia")
                        .HasColumnType("integer");

                    b.HasKey("OrganizacionID", "ProyectoID");

                    b.ToTable("ProyectoCerrandose");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoConfigExtraSem", b =>
                {
                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("UrlOntologia")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnOrder(1);

                    b.Property<string>("SourceTesSem")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnOrder(2);

                    b.Property<bool>("Editable")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Idiomas")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrefijoTesSem")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.HasKey("ProyectoID", "UrlOntologia", "SourceTesSem");

                    b.ToTable("ProyectoConfigExtraSem");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoEvento", b =>
                {
                    b.Property<Guid>("EventoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ComponenteID")
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Grupo")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("InfoExtra")
                        .HasColumnType("text");

                    b.Property<bool>("Interno")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<short>("TipoEvento")
                        .HasColumnType("smallint");

                    b.Property<string>("UrlRedirect")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("EventoID");

                    b.ToTable("ProyectoEvento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoEventoAccion", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("Evento")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<string>("AccionJS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID", "Evento");

                    b.ToTable("ProyectoEventoAccion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoEventoParticipante", b =>
                {
                    b.Property<Guid>("EventoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("EventoID", "IdentidadID");

                    b.ToTable("ProyectoEventoParticipante");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGadget", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("GadgetID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<bool>("CargarPorAjax")
                        .HasColumnType("boolean");

                    b.Property<string>("Clases")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ComunidadDestinoFiltros")
                        .HasColumnType("text");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("MultiIdioma")
                        .HasColumnType("boolean");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<Guid?>("PersonalizacionComponenteID")
                        .HasColumnType("uuid");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.Property<short>("TipoUbicacion")
                        .HasColumnType("smallint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("Visible")
                        .HasColumnType("boolean");

                    b.HasKey("OrganizacionID", "ProyectoID", "GadgetID");

                    b.ToTable("ProyectoGadget");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGadgetContexto", b =>
                {
                    b.Property<Guid>("GadgetID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("ComunidadDestinoFiltros")
                        .HasColumnType("text");

                    b.Property<string>("ComunidadOrigen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ComunidadOrigenFiltros")
                        .HasColumnType("text");

                    b.Property<string>("FiltrosOrigenDestino")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("Imagen")
                        .HasColumnType("smallint");

                    b.Property<string>("ItemsBusqueda")
                        .HasColumnType("text");

                    b.Property<bool>("MostrarEnlaceOriginal")
                        .HasColumnType("boolean");

                    b.Property<string>("NamespacesExtra")
                        .HasColumnType("text");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("NuevaPestanya")
                        .HasColumnType("boolean");

                    b.Property<short>("NumRecursos")
                        .HasColumnType("smallint");

                    b.Property<bool>("ObtenerPrivados")
                        .HasColumnType("boolean");

                    b.Property<bool>("OcultarVerMas")
                        .HasColumnType("boolean");

                    b.Property<string>("OrdenContexto")
                        .HasColumnType("text");

                    b.Property<Guid>("ProyectoOrigenID")
                        .HasColumnType("uuid");

                    b.Property<string>("ResultadosEliminar")
                        .HasColumnType("text");

                    b.Property<string>("ServicioResultados")
                        .HasColumnType("text");

                    b.HasKey("GadgetID", "OrganizacionID", "ProyectoID");

                    b.ToTable("ProyectoGadgetContexto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGadgetContextoHTMLplano", b =>
                {
                    b.Property<Guid>("GadgetID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("ComunidadDestinoFiltros")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GadgetID", "OrganizacionID", "ProyectoID");

                    b.HasIndex("OrganizacionID", "ProyectoID", "GadgetID")
                        .IsUnique();

                    b.ToTable("ProyectoGadgetContextoHTMLplano");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGadgetIdioma", b =>
                {
                    b.Property<Guid>("GadgetID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("Idioma")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(3);

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GadgetID", "OrganizacionID", "ProyectoID", "Idioma");

                    b.ToTable("ProyectoGadgetIdioma");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGrafoFichaRec", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("GrafoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("Extra")
                        .HasColumnType("text");

                    b.Property<int?>("NodosLimiteNivel")
                        .HasColumnType("integer");

                    b.Property<string>("PropEnlace")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("OrganizacionID", "ProyectoID", "GrafoID");

                    b.ToTable("ProyectoGrafoFichaRec");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoLoginConfiguracion", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID");

                    b.ToTable("ProyectoLoginConfiguracion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPaginaHtml", b =>
                {
                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Nombre")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnOrder(1);

                    b.Property<string>("Html")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Idioma")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.HasKey("ProyectoID", "Nombre");

                    b.ToTable("ProyectoPaginaHtml");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPalabrasInapropiadas", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Tag")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnOrder(2);

                    b.Property<short>("Rombos")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID", "ProyectoID", "Tag");

                    b.ToTable("ProyectoPalabrasInapropiadas");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPasoRegistro", b =>
                {
                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<bool>("Obligatorio")
                        .HasColumnType("boolean");

                    b.Property<string>("PasoRegistro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProyectoID", "OrganizacionID", "Orden");

                    b.HasIndex("OrganizacionID", "ProyectoID");

                    b.ToTable("ProyectoPasoRegistro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPerfilNumElem", b =>
                {
                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<int>("NumRecursos")
                        .HasColumnType("integer");

                    b.HasKey("ProyectoID", "PerfilID");

                    b.ToTable("ProyectoPerfilNumElem");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanya", b =>
                {
                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Nombre")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)")
                        .HasColumnOrder(1);

                    b.Property<bool>("CMS")
                        .HasColumnType("boolean");

                    b.Property<string>("CampoFiltro")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("EsRutaInterna")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsSemantica")
                        .HasColumnType("boolean");

                    b.Property<string>("GruposConfiguracion")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("GruposPorTipo")
                        .HasColumnType("boolean");

                    b.Property<string>("HTMLAlternativo")
                        .HasColumnType("text");

                    b.Property<bool>("MostrarCajaBusqueda")
                        .HasColumnType("boolean");

                    b.Property<bool>("MostrarFacetas")
                        .HasColumnType("boolean");

                    b.Property<string>("NombrePestanyaPadre")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<bool>("NuevaPestanya")
                        .HasColumnType("boolean");

                    b.Property<short?>("NumeroRecursos")
                        .HasColumnType("smallint");

                    b.Property<bool>("OcultarResultadosSinFiltros")
                        .HasColumnType("boolean");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<short>("Privacidad")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ProyectoOrigenID")
                        .HasColumnType("uuid");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<string>("TextoBusquedaSinResultado")
                        .HasColumnType("text");

                    b.Property<bool>("Visible")
                        .HasColumnType("boolean");

                    b.Property<string>("VistaDisponible")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("posicionCentralMapa")
                        .HasColumnType("text");

                    b.HasKey("ProyectoID", "Nombre");

                    b.ToTable("ProyectoPestanya");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusqueda", b =>
                {
                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid");

                    b.Property<string>("CampoFiltro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GruposConfiguracion")
                        .HasColumnType("text");

                    b.Property<bool>("GruposPorTipo")
                        .HasColumnType("boolean");

                    b.Property<bool>("IgnorarPrivacidadEnBusqueda")
                        .HasColumnType("boolean");

                    b.Property<bool>("MostrarCajaBusqueda")
                        .HasColumnType("boolean");

                    b.Property<bool>("MostrarEnComboBusqueda")
                        .HasColumnType("boolean");

                    b.Property<bool>("MostrarFacetas")
                        .HasColumnType("boolean");

                    b.Property<short>("NumeroRecursos")
                        .HasColumnType("smallint");

                    b.Property<bool>("OcultarResultadosSinFiltros")
                        .HasColumnType("boolean");

                    b.Property<bool>("OmitirCargaInicialFacetasResultados")
                        .HasColumnType("boolean");

                    b.Property<string>("PosicionCentralMapa")
                        .HasColumnType("text");

                    b.Property<Guid?>("ProyectoOrigenID")
                        .HasColumnType("uuid");

                    b.Property<string>("RelacionMandatory")
                        .HasColumnType("text");

                    b.Property<string>("SearchPersonalizado")
                        .HasColumnType("text");

                    b.Property<string>("TextoBusquedaSinResultados")
                        .HasColumnType("text");

                    b.Property<string>("TextoDefectoBuscador")
                        .HasColumnType("text");

                    b.Property<int>("TipoAutocompletar")
                        .HasColumnType("integer");

                    b.Property<string>("VistaDisponible")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("PestanyaID");

                    b.ToTable("ProyectoPestanyaBusqueda");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusquedaExportacion", b =>
                {
                    b.Property<Guid>("ExportacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FormatosExportacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("GruposExportadores")
                        .HasColumnType("text");

                    b.Property<string>("NombreExportacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid");

                    b.HasKey("ExportacionID");

                    b.HasIndex("PestanyaID");

                    b.ToTable("ProyectoPestanyaBusquedaExportacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusquedaExportacionExterna", b =>
                {
                    b.Property<Guid>("ExportacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid");

                    b.Property<string>("UrlServicioExterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ExportacionID");

                    b.ToTable("ProyectoPestanyaBusquedaExportacionExterna");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusquedaExportacionPropiedad", b =>
                {
                    b.Property<Guid>("ExportacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.Property<string>("DatosExtraPropiedad")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("NombrePropiedad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ontologia")
                        .HasColumnType("text");

                    b.Property<Guid?>("OntologiaID")
                        .HasColumnType("uuid");

                    b.Property<string>("Propiedad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ExportacionID", "Orden");

                    b.ToTable("ProyectoPestanyaBusquedaExportacionPropiedad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusquedaPesoOC", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<string>("OntologiaProyecto1")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("OntologiaProyecto");

                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<short>("Peso")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID", "ProyectoID", "OntologiaProyecto1", "PestanyaID", "Tipo");

                    b.HasIndex("PestanyaID");

                    b.ToTable("ProyectoPestanyaBusquedaPesoOC");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaCMS", b =>
                {
                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<short>("Ubicacion")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.HasKey("PestanyaID", "Ubicacion");

                    b.ToTable("ProyectoPestanyaCMS");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaDashboardAsistente", b =>
                {
                    b.Property<Guid>("AsisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Labels")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid");

                    b.Property<bool>("PropExtra")
                        .HasColumnType("boolean");

                    b.Property<string>("Select")
                        .HasColumnType("text");

                    b.Property<string>("Tamanyo")
                        .HasColumnType("text");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<bool>("Titulo")
                        .HasColumnType("boolean");

                    b.Property<string>("Where")
                        .HasColumnType("text");

                    b.HasKey("AsisID");

                    b.HasIndex("PestanyaID");

                    b.ToTable("ProyectoPestanyaDashboardAsistente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaDashboardAsistenteDataset", b =>
                {
                    b.Property<Guid>("DatasetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AsisID")
                        .HasColumnType("uuid");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Datos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.HasKey("DatasetID");

                    b.HasIndex("AsisID");

                    b.ToTable("ProyectoPestanyaDashboardAsistenteDataset");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaExportacionBusqueda", b =>
                {
                    b.Property<Guid>("ExportacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NombreExportacion")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<string>("NombrePestanya")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("ExportacionID");

                    b.ToTable("ProyectoPestanyaExportacionBusqueda");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaFiltroOrdenRecursos", b =>
                {
                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.Property<string>("Consulta")
                        .HasColumnType("text");

                    b.Property<string>("FiltroOrden")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreFiltro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderBy")
                        .HasColumnType("text");

                    b.HasKey("PestanyaID", "Orden");

                    b.ToTable("ProyectoPestanyaFiltroOrdenRecursos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", b =>
                {
                    b.Property<Guid>("PestanyaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activa")
                        .HasColumnType("boolean");

                    b.Property<string>("CSSBodyClass")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HtmlAlternativo")
                        .HasColumnType("text");

                    b.Property<string>("IdiomasDisponibles")
                        .HasColumnType("text");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("NombreCortoPestanya")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("NuevaPestanya")
                        .HasColumnType("boolean");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PestanyaPadreID")
                        .HasColumnType("uuid");

                    b.Property<short>("Privacidad")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<string>("Ruta")
                        .HasColumnType("text");

                    b.Property<short>("TipoPestanya")
                        .HasColumnType("smallint");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.Property<string>("UltimoEditor")
                        .HasColumnType("text");

                    b.Property<bool>("Visible")
                        .HasColumnType("boolean");

                    b.Property<bool>("VisibleSinAcceso")
                        .HasColumnType("boolean");

                    b.HasKey("PestanyaID");

                    b.HasIndex("PestanyaPadreID");

                    b.HasIndex("OrganizacionID", "ProyectoID");

                    b.ToTable("ProyectoPestanyaMenu");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenuRolGrupoIdentidades", b =>
                {
                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.HasKey("PestanyaID", "GrupoID");

                    b.ToTable("ProyectoPestanyaMenuRolGrupoIdentidades");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenuRolIdentidad", b =>
                {
                    b.Property<Guid>("PestanyaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.HasKey("PestanyaID", "PerfilID");

                    b.ToTable("ProyectoPestanyaMenuRolIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaRolGrupoIdentidades", b =>
                {
                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Nombre")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("ProyectoID", "Nombre", "GrupoID");

                    b.ToTable("ProyectoPestanyaRolGrupoIdentidades");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaRolIdentidad", b =>
                {
                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Nombre")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("ProyectoID", "Nombre", "PerfilID");

                    b.ToTable("ProyectoPestanyaRolIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoRelacionado", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OrganizacionRelacionadaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProyectoRelacionadoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID", "ProyectoID", "OrganizacionRelacionadaID", "ProyectoRelacionadoID");

                    b.HasIndex("OrganizacionRelacionadaID", "ProyectoRelacionadoID");

                    b.ToTable("ProyectoRelacionado");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoSearchPersonalizado", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("NombreFiltro")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<bool>("OmitirRdfType")
                        .HasColumnType("boolean");

                    b.Property<string>("OrderBySPARQL")
                        .HasColumnType("text");

                    b.Property<string>("WhereFacetasSPARQL")
                        .HasColumnType("text");

                    b.Property<string>("WhereSPARQL")
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID", "NombreFiltro");

                    b.ToTable("ProyectoSearchPersonalizado");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoServicioExterno", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("NombreServicio")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("character varying(150)")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UrlServicio")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.HasKey("OrganizacionID", "ProyectoID", "NombreServicio");

                    b.ToTable("ProyectoServicioExterno");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectosMasActivos", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("NumeroConsultas")
                        .HasColumnType("integer");

                    b.Property<int>("Peso")
                        .HasColumnType("integer");

                    b.HasKey("OrganizacionID", "ProyectoID");

                    b.ToTable("ProyectosMasActivos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.RecursosRelacionadosPresentacion", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<Guid>("OntologiaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<short>("Imagen")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Ontologia")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Propiedad")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.HasKey("OrganizacionID", "ProyectoID", "Orden", "OntologiaID");

                    b.ToTable("RecursosRelacionadosPresentacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.SeccionProyCatalogo", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OrganizacionBusquedaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProyectoBusquedaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint")
                        .HasColumnOrder(4);

                    b.Property<string>("Faceta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Filtro")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)");

                    b.Property<short>("NumeroResultados")
                        .HasColumnType("smallint");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.HasKey("OrganizacionID", "ProyectoID", "OrganizacionBusquedaID", "ProyectoBusquedaID", "Orden");

                    b.ToTable("SeccionProyCatalogo");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.TipoDocDispRolUsuarioProy", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("TipoDocumento")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<short>("RolUsuario")
                        .HasColumnType("smallint")
                        .HasColumnOrder(3);

                    b.HasKey("OrganizacionID", "ProyectoID", "TipoDocumento", "RolUsuario");

                    b.ToTable("TipoDocDispRolUsuarioProy");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.TipoDocImagenPorDefecto", b =>
                {
                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<short>("TipoRecurso")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OntologiaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("ProyectoID", "TipoRecurso", "OntologiaID");

                    b.ToTable("TipoDocImagenPorDefecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.TipoOntoDispRolUsuarioProy", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OntologiaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<short>("RolUsuario")
                        .HasColumnType("smallint")
                        .HasColumnOrder(3);

                    b.HasKey("OrganizacionID", "ProyectoID", "OntologiaID", "RolUsuario");

                    b.ToTable("TipoOntoDispRolUsuarioProy");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.RedireccionRegistroRuta", b =>
                {
                    b.Property<Guid>("RedireccionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Dominio")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NombreParametro")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("UrlOrigen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RedireccionID");

                    b.ToTable("RedireccionRegistroRuta");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.RedireccionValorParametro", b =>
                {
                    b.Property<Guid>("RedireccionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("ValorParametro")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnOrder(1);

                    b.Property<bool>("MantenerFiltros")
                        .HasColumnType("boolean");

                    b.Property<short>("OrdenPresentacion")
                        .HasColumnType("smallint");

                    b.Property<string>("UrlRedireccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RedireccionID", "ValorParametro");

                    b.ToTable("RedireccionValorParametro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.Rol", b =>
                {
                    b.Property<Guid>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PermisosAdministracion")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("PermisosContenidos")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("PermisosRecursos")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.HasKey("RolID");

                    b.HasIndex("ProyectoID", "OrganizacionID");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.RolEcosistema", b =>
                {
                    b.Property<Guid>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<decimal>("Permisos")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("RolID");

                    b.ToTable("RolEcosistema");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.RolEcosistemaUsuario", b =>
                {
                    b.Property<Guid>("RolID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid");

                    b.HasKey("RolID", "UsuarioID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("RolEcosistemaUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.RolGrupoIdentidades", b =>
                {
                    b.Property<Guid>("RolID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid");

                    b.HasKey("RolID", "GrupoID");

                    b.HasIndex("GrupoID");

                    b.ToTable("RolGrupoIdentidades");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.RolIdentidad", b =>
                {
                    b.Property<Guid>("RolID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.HasKey("RolID", "IdentidadID");

                    b.HasIndex("IdentidadID");

                    b.ToTable("RolIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Sitemaps.Sitemaps", b =>
                {
                    b.Property<string>("Dominio")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnOrder(0);

                    b.Property<string>("SitemapIndexName")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<string>("SitemapContent")
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.HasKey("Dominio", "SitemapIndexName");

                    b.ToTable("Sitemaps");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Sitemaps.SitemapsIndex", b =>
                {
                    b.Property<string>("Dominio")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnOrder(0);

                    b.Property<string>("Robots")
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.Property<string>("Sitemap")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.HasKey("Dominio");

                    b.ToTable("SitemapsIndex");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.DatoExtraEcosistemaOpcionSolicitud", b =>
                {
                    b.Property<Guid>("DatoExtraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OpcionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("SolicitudID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("DatoExtraID", "OpcionID", "SolicitudID");

                    b.HasIndex("SolicitudID");

                    b.ToTable("DatoExtraEcosistemaOpcionSolicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.DatoExtraEcosistemaVirtuosoSolicitud", b =>
                {
                    b.Property<Guid>("DatoExtraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Opcion")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("SolicitudID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.HasKey("DatoExtraID", "Opcion", "SolicitudID");

                    b.HasIndex("SolicitudID");

                    b.ToTable("DatoExtraEcosistemaVirtuosoSolicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.DatoExtraProyectoOpcionSolicitud", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("DatoExtraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("OpcionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<Guid>("SolicitudID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(4);

                    b.HasKey("OrganizacionID", "ProyectoID", "DatoExtraID", "OpcionID", "SolicitudID");

                    b.HasIndex("SolicitudID");

                    b.ToTable("DatoExtraProyectoOpcionSolicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.DatoExtraProyectoVirtuosoSolicitud", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("DatoExtraID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("SolicitudID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<string>("Opcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("OrganizacionID", "ProyectoID", "DatoExtraID", "SolicitudID");

                    b.ToTable("DatoExtraProyectoVirtuosoSolicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.Solicitud", b =>
                {
                    b.Property<Guid>("SolicitudID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<short>("Estado")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FechaProcesado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("SolicitudID");

                    b.ToTable("Solicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudGrupo", b =>
                {
                    b.Property<Guid>("SolicitudID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("GrupoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("SolicitudID", "GrupoID", "IdentidadID");

                    b.ToTable("SolicitudGrupo");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudNuevaOrgEmp", b =>
                {
                    b.Property<Guid>("SolicitudID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("UsuarioAdminID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("CIF")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<int>("Empleados")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FechaFundacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short>("Sector")
                        .HasColumnType("smallint");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.HasKey("SolicitudID", "UsuarioAdminID");

                    b.ToTable("SolicitudNuevaOrgEmp");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudNuevaOrganizacion", b =>
                {
                    b.Property<Guid>("SolicitudID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("UsuarioAdminID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Alias")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("CP")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("CargoContactoPrincipal")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("EmailContactoPrincipal")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool?>("EsBuscable")
                        .HasColumnType("boolean");

                    b.Property<bool?>("EsBuscableExternos")
                        .HasColumnType("boolean");

                    b.Property<bool>("ModoPersonal")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NombreCorto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PaginaWeb")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("PaisID")
                        .HasColumnType("uuid");

                    b.Property<string>("Poblacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("ProvinciaID")
                        .HasColumnType("uuid");

                    b.Property<string>("URLFoto")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("SolicitudID", "UsuarioAdminID");

                    b.ToTable("SolicitudNuevaOrganizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudNuevoProfesor", b =>
                {
                    b.Property<Guid>("SolicitudID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("AreaEstudios")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("CentroEstudios")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("SolicitudID", "UsuarioID");

                    b.ToTable("SolicitudNuevoProfesor");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudNuevoUsuario", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("SolicitudID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("CP")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<bool>("CambioPassword")
                        .HasColumnType("boolean");

                    b.Property<string>("ClausulasAdicionales")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool?>("CrearClase")
                        .HasColumnType("boolean");

                    b.Property<string>("Direccion")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("EmailTutor")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("EsBuscable")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsBuscableExterno")
                        .HasColumnType("boolean");

                    b.Property<bool>("FaltanDatos")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NombreCorto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("PaisID")
                        .HasColumnType("uuid");

                    b.Property<string>("Poblacion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("ProvinciaID")
                        .HasColumnType("uuid");

                    b.Property<string>("ProyectosAutoAcceso")
                        .HasColumnType("text");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character(1)")
                        .IsFixedLength();

                    b.Property<short>("TipoRegistro")
                        .HasColumnType("smallint");

                    b.Property<string>("URLFoto")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("UsuarioID", "SolicitudID");

                    b.HasIndex("SolicitudID");

                    b.ToTable("SolicitudNuevoUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudOrganizacion", b =>
                {
                    b.Property<Guid>("SolicitudID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.HasKey("SolicitudID", "OrganizacionID");

                    b.ToTable("SolicitudOrganizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudUsuario", b =>
                {
                    b.Property<Guid>("SolicitudID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PersonaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("ClausulasAdicionales")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid>("PerfilID")
                        .HasColumnType("uuid");

                    b.HasKey("SolicitudID", "UsuarioID", "PersonaID");

                    b.ToTable("SolicitudUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.CategoriaTesVinSuscrip", b =>
                {
                    b.Property<Guid>("SuscripcionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CategoriaTesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("SuscripcionID", "TesauroID", "CategoriaTesauroID");

                    b.ToTable("CategoriaTesVinSuscrip");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.Suscripcion", b =>
                {
                    b.Property<Guid>("SuscripcionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Bloqueada")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("FechaSuscripcion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.Property<int>("Periodicidad")
                        .HasColumnType("integer");

                    b.Property<int?>("ScoreUltimoEnvio")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UltimoEnvio")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("SuscripcionID");

                    b.ToTable("Suscripcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionBlog", b =>
                {
                    b.Property<Guid>("BlogID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("SuscripcionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.HasKey("BlogID", "SuscripcionID");

                    b.HasIndex("SuscripcionID");

                    b.ToTable("SuscripcionBlog");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionIdentidadProyecto", b =>
                {
                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("SuscripcionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("IdentidadID", "SuscripcionID");

                    b.HasIndex("SuscripcionID");

                    b.ToTable("SuscripcionIdentidadProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionTesauroOrganizacion", b =>
                {
                    b.Property<Guid>("SuscripcionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid");

                    b.HasKey("SuscripcionID");

                    b.ToTable("SuscripcionTesauroOrganizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionTesauroProyecto", b =>
                {
                    b.Property<Guid>("SuscripcionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid");

                    b.HasKey("SuscripcionID");

                    b.ToTable("SuscripcionTesauroProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionTesauroUsuario", b =>
                {
                    b.Property<Guid>("SuscripcionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid");

                    b.HasKey("SuscripcionID");

                    b.ToTable("SuscripcionTesauroUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CatTesauroAgCatTesauro", b =>
                {
                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CategoriaSuperiorID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CategoriaInferiorID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.HasKey("TesauroID", "CategoriaSuperiorID", "CategoriaInferiorID");

                    b.HasIndex("TesauroID", "CategoriaInferiorID");

                    b.ToTable("CatTesauroAgCatTesauro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CatTesauroCompartida", b =>
                {
                    b.Property<Guid>("TesauroOrigenID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CategoriaOrigenID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("TesauroDestinoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("CategoriaSupDestinoID")
                        .HasColumnType("uuid");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.HasKey("TesauroOrigenID", "CategoriaOrigenID", "TesauroDestinoID");

                    b.HasIndex("TesauroDestinoID", "CategoriaSupDestinoID");

                    b.ToTable("CatTesauroCompartida");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CatTesauroPermiteTipoRec", b =>
                {
                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CategoriaTesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("TipoRecurso")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<string>("OntologiasID")
                        .HasColumnType("text");

                    b.HasKey("TesauroID", "CategoriaTesauroID", "TipoRecurso");

                    b.ToTable("CatTesauroPermiteTipoRec");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CategoriaTesauro", b =>
                {
                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CategoriaTesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("Estructurante")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("NumeroDafos")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroDebates")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroPreguntas")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroRecursos")
                        .HasColumnType("integer");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<bool>("TieneFoto")
                        .HasColumnType("boolean");

                    b.Property<short>("VersionFoto")
                        .HasColumnType("smallint");

                    b.HasKey("TesauroID", "CategoriaTesauroID");

                    b.ToTable("CategoriaTesauro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CategoriaTesauroPropiedades", b =>
                {
                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CategoriaTesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("Obligatoria")
                        .HasColumnType("smallint");

                    b.HasKey("TesauroID", "CategoriaTesauroID");

                    b.ToTable("CategoriaTesauroPropiedades");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CategoriaTesauroSugerencia", b =>
                {
                    b.Property<Guid>("SugerenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoriaTesauroAceptadaID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoriaTesauroPadreID")
                        .HasColumnType("uuid");

                    b.Property<short>("Estado")
                        .HasColumnType("smallint");

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid?>("TesauroCatPadreID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TesauroSugerenciaID")
                        .HasColumnType("uuid");

                    b.HasKey("SugerenciaID");

                    b.HasIndex("TesauroSugerenciaID");

                    b.HasIndex("TesauroCatPadreID", "CategoriaTesauroPadreID");

                    b.ToTable("CategoriaTesauroSugerencia");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.Tesauro", b =>
                {
                    b.Property<Guid>("TesauroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("TesauroID");

                    b.ToTable("Tesauro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.TesauroOrganizacion", b =>
                {
                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CategoriaTesauroFavoritosID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoriaTesauroPrivadoID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoriaTesauroPublicoID")
                        .HasColumnType("uuid");

                    b.HasKey("TesauroID", "OrganizacionID");

                    b.ToTable("TesauroOrganizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.TesauroProyecto", b =>
                {
                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("IdiomaDefecto")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("TesauroID", "OrganizacionID", "ProyectoID");

                    b.ToTable("TesauroProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.TesauroUsuario", b =>
                {
                    b.Property<Guid>("TesauroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CategoriaTesauroMisImagenesID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoriaTesauroMisVideosID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoriaTesauroPrivadoID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoriaTesauroPublicoID")
                        .HasColumnType("uuid");

                    b.HasKey("TesauroID", "UsuarioID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("TesauroUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UltimosDocumentosVisitados", b =>
                {
                    b.Property<Guid>("ProyectoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Documentos")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ProyectoID");

                    b.ToTable("UltimosDocumentosVisitados");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.AdministradorGeneral", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid");

                    b.HasKey("UsuarioID");

                    b.ToTable("AdministradorGeneral");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.AdministradorOrganizacion", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.HasKey("UsuarioID", "OrganizacionID", "Tipo");

                    b.HasIndex("OrganizacionID");

                    b.ToTable("AdministradorOrganizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.ClausulaRegistro", b =>
                {
                    b.Property<Guid>("ClausulaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.HasKey("ClausulaID", "OrganizacionID", "ProyectoID");

                    b.ToTable("ClausulaRegistro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.GeneralRolGrupoUsuario", b =>
                {
                    b.Property<Guid>("GrupoUsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("RolDenegado")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("character(16)")
                        .IsFixedLength();

                    b.Property<string>("RolPermitido")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("character(16)")
                        .IsFixedLength();

                    b.HasKey("GrupoUsuarioID");

                    b.ToTable("GeneralRolGrupoUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.GeneralRolUsuario", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid");

                    b.Property<string>("RolDenegado")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("character(16)")
                        .IsFixedLength();

                    b.Property<string>("RolPermitido")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("character(16)")
                        .IsFixedLength();

                    b.HasKey("UsuarioID");

                    b.ToTable("GeneralRolUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.GrupoUsuario", b =>
                {
                    b.Property<Guid>("GrupoUsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("GrupoUsuarioID");

                    b.ToTable("GrupoUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.GrupoUsuarioUsuario", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("GrupoUsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.HasKey("UsuarioID", "GrupoUsuarioID");

                    b.ToTable("GrupoUsuarioUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.HistoricoProyectoUsuario", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionGnossID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("UsuarioID", "OrganizacionGnossID", "ProyectoID", "IdentidadID", "FechaEntrada");

                    b.ToTable("HistoricoProyectoUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.InicioSesion", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OrganizacionGnossID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PersonaID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProyectoID")
                        .HasColumnType("uuid");

                    b.HasKey("UsuarioID");

                    b.ToTable("InicioSesion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.OrganizacionRolUsuario", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("RolDenegado")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("character(16)")
                        .IsFixedLength();

                    b.Property<string>("RolPermitido")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("character(16)")
                        .IsFixedLength();

                    b.HasKey("UsuarioID", "OrganizacionID");

                    b.ToTable("OrganizacionRolUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.ProyRolUsuClausulaReg", b =>
                {
                    b.Property<Guid>("ClausulaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OrganizacionGnossID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(4);

                    b.Property<bool>("Valor")
                        .HasColumnType("boolean");

                    b.HasKey("ClausulaID", "OrganizacionID", "OrganizacionGnossID", "ProyectoID", "UsuarioID");

                    b.HasIndex("ClausulaID", "OrganizacionID", "ProyectoID");

                    b.HasIndex("OrganizacionGnossID", "ProyectoID", "UsuarioID");

                    b.ToTable("ProyRolUsuClausulaReg");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.ProyectoRolGrupoUsuario", b =>
                {
                    b.Property<Guid>("OrganizacionGnossID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("GrupoUsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("RolDenegado")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("character(16)")
                        .IsFixedLength();

                    b.Property<string>("RolPermitido")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("character(16)")
                        .IsFixedLength();

                    b.HasKey("OrganizacionGnossID", "ProyectoID", "GrupoUsuarioID");

                    b.ToTable("ProyectoRolGrupoUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.ProyectoRolUsuario", b =>
                {
                    b.Property<Guid>("OrganizacionGnossID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<bool>("EstaBloqueado")
                        .HasColumnType("boolean");

                    b.Property<string>("RolDenegado")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("character(16)")
                        .IsFixedLength();

                    b.Property<string>("RolPermitido")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("character(16)")
                        .IsFixedLength();

                    b.HasKey("OrganizacionGnossID", "ProyectoID", "UsuarioID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("ProyectoRolUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.ProyectoUsuarioIdentidad", b =>
                {
                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OrganizacionGnossID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("FechaEntrada")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("Reputacion")
                        .HasColumnType("integer");

                    b.HasKey("IdentidadID", "UsuarioID", "OrganizacionGnossID", "ProyectoID");

                    b.HasIndex("UsuarioID");

                    b.HasIndex("OrganizacionGnossID", "ProyectoID");

                    b.ToTable("ProyectoUsuarioIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool?>("EstaBloqueado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("FechaCambioPassword")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("NombreCorto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("TwoFactorAuthentication")
                        .HasColumnType("boolean");

                    b.Property<short>("Validado")
                        .HasColumnType("smallint");

                    b.Property<short?>("Version")
                        .HasColumnType("smallint");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.UsuarioContadores", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("FechaUltimaVisita")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("NumeroAccesos")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioID");

                    b.ToTable("UsuarioContadores");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.UsuarioRedirect", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid");

                    b.Property<string>("UrlRedirect")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("UsuarioID");

                    b.ToTable("UsuarioRedirect");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.UsuarioVinculadoLoginRedesSociales", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<short>("TipoRedSocial")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.Property<string>("IDenRedSocial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UsuarioID", "TipoRedSocial");

                    b.ToTable("UsuarioVinculadoLoginRedesSociales");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtual", b =>
                {
                    b.Property<Guid>("PersonalizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("TipoPagina")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HTML")
                        .IsRequired()
                        .HasColumnType("NCLOB");

                    b.HasKey("PersonalizacionID", "TipoPagina");

                    b.ToTable("VistaVirtual");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualCMS", b =>
                {
                    b.Property<Guid>("PersonalizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("TipoComponente")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PersonalizacionComponenteID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("DatosExtra")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HTML")
                        .IsRequired()
                        .HasColumnType("NCLOB");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("PersonalizacionID", "TipoComponente", "PersonalizacionComponenteID");

                    b.ToTable("VistaVirtualCMS");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualDominio", b =>
                {
                    b.Property<Guid>("PersonalizacionID")
                        .HasColumnType("uuid");

                    b.Property<string>("Dominio")
                        .HasColumnType("text");

                    b.HasKey("PersonalizacionID", "Dominio");

                    b.ToTable("VistaVirtualDominio");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualGadgetRecursos", b =>
                {
                    b.Property<Guid>("PersonalizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("PersonalizacionComponenteID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("HTML")
                        .IsRequired()
                        .HasColumnType("NCLOB");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("PersonalizacionID", "PersonalizacionComponenteID");

                    b.ToTable("VistaVirtualGadgetRecursos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualPersonalizacion", b =>
                {
                    b.Property<Guid>("PersonalizacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("PersonalizacionID");

                    b.ToTable("VistaVirtualPersonalizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualProyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PersonalizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("OrganizacionID", "ProyectoID", "PersonalizacionID");

                    b.HasIndex("PersonalizacionID");

                    b.ToTable("VistaVirtualProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualRecursos", b =>
                {
                    b.Property<Guid>("PersonalizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("RdfType")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HTML")
                        .IsRequired()
                        .HasColumnType("NCLOB");

                    b.HasKey("PersonalizacionID", "RdfType");

                    b.ToTable("VistaVirtualRecursos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Voto.Voto", b =>
                {
                    b.Property<Guid>("VotoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ElementoID")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("FechaVotacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("IdentidadID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdentidadVotadaID")
                        .HasColumnType("uuid");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.Property<double>("Voto1")
                        .HasColumnType("double precision")
                        .HasColumnName("Voto");

                    b.HasKey("VotoID");

                    b.ToTable("Voto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Voto.VotoEntradaBlog", b =>
                {
                    b.Property<Guid>("BlogID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("EntradaBlogID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("VotoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("BlogID", "EntradaBlogID", "VotoID");

                    b.HasIndex("VotoID");

                    b.ToTable("VotoEntradaBlog");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Voto.VotoMensajeForo", b =>
                {
                    b.Property<Guid>("VotoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ForoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CategoriaForoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("TemaID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<Guid>("MensajeForoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(4);

                    b.HasKey("VotoID", "ForoID", "CategoriaForoID", "TemaID", "MensajeForoID");

                    b.ToTable("VotoMensajeForo");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.ParametroAplicacion", b =>
                {
                    b.Property<string>("Parametro")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(0);

                    b.Property<string>("Valor")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(1);

                    b.HasKey("Parametro");

                    b.ToTable("ParametroAplicacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.ProyectoRegistroObligatorio", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<short>("VisibilidadUsuariosActivos")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.HasKey("OrganizacionID", "ProyectoID");

                    b.ToTable("ProyectoRegistroObligatorio");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.ProyectoSinRegistroObligatorio", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("OrganizacionSinRegistroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProyectoSinRegistroID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.HasKey("OrganizacionID", "ProyectoID", "OrganizacionSinRegistroID", "ProyectoSinRegistroID");

                    b.HasIndex("OrganizacionSinRegistroID", "ProyectoSinRegistroID");

                    b.ToTable("ProyectoSinRegistroObligatorio");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.TextosPersonalizadosPlataforma", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("TextoID")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Language")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnOrder(3);

                    b.Property<string>("Texto")
                        .HasColumnType("text")
                        .HasColumnOrder(4);

                    b.HasKey("OrganizacionID", "ProyectoID", "TextoID", "Language");

                    b.ToTable("TextosPersonalizadosPlataforma");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.TokenApiLogin", b =>
                {
                    b.Property<Guid>("Token")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Token");

                    b.ToTable("TokenApiLogin");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.TareasSegundoPlano.TareasSegundoPlano", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<int>("EventosTotales")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid");

                    b.Property<string>("Tipo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrganizacionID", "ProyectoID");

                    b.ToTable("TareasSegundoPlano");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.Elementos.ParametroGeneralDSName.ConfiguracionAmbitoBusquedaProyecto", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool>("Metabusqueda")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("PestanyaDefectoID")
                        .HasColumnType("uuid");

                    b.Property<bool>("TodoGnoss")
                        .HasColumnType("boolean");

                    b.HasKey("OrganizacionID", "ProyectoID");

                    b.ToTable("ConfiguracionAmbitoBusquedaProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.Web.MVC.Models.ProyectoServicioWeb", b =>
                {
                    b.Property<Guid>("OrganizacionID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("AplicacionWeb")
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.Property<string>("Nombre")
                        .HasColumnType("text")
                        .HasColumnOrder(3);

                    b.HasKey("OrganizacionID", "ProyectoID", "AplicacionWeb");

                    b.ToTable("ProyectoServicioWeb");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Blog.BlogAgCatTesauro", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Blog.Blog", "Blog")
                        .WithMany("BlogAgCatTesauro")
                        .HasForeignKey("BlogID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Blog.BlogComunidad", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Blog.Blog", "Blog")
                        .WithMany("BlogComunidad")
                        .HasForeignKey("BlogID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSBloque", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSPagina", "CMSPagina")
                        .WithMany("CMSBloque")
                        .HasForeignKey("OrganizacionID", "ProyectoID", "Ubicacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CMSPagina");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSBloqueComponente", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSBloque", "CMSBloque")
                        .WithMany("CMSBloqueComponente")
                        .HasForeignKey("BloqueID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSComponente", "CMSComponente")
                        .WithMany("CMSBloqueComponente")
                        .HasForeignKey("ComponenteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CMSBloque");

                    b.Navigation("CMSComponente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSBloqueComponentePropiedadComponente", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSBloqueComponente", "CMSBloqueComponente")
                        .WithMany("CMSBloqueComponentePropiedadComponente")
                        .HasForeignKey("BloqueID", "ComponenteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CMSBloqueComponente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSComponenteRolGrupoIdentidades", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSComponente", "CMSComponente")
                        .WithMany("CMSComponenteRolGrupoIdentidades")
                        .HasForeignKey("ComponenteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CMSComponente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSComponenteRolIdentidad", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSComponente", "CMSComponente")
                        .WithMany("CMSComponenteRolIdentidad")
                        .HasForeignKey("ComponenteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CMSComponente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSPropiedadComponente", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSComponente", "CMSComponente")
                        .WithMany("CMSPropiedadComponente")
                        .HasForeignKey("ComponenteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CMSComponente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Cache.ConfiguracionCachesCostosas", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithOne("ConfiguracionCachesCostosas")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Cache.ConfiguracionCachesCostosas", "OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Carga.CargaPaquete", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Carga.Carga", "Carga")
                        .WithMany("CargaPaquete")
                        .HasForeignKey("CargaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carga");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.Comentario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.Comentario", "Comentario2")
                        .WithMany("Comentario1")
                        .HasForeignKey("ComentarioSuperiorID");

                    b.Navigation("Comentario2");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.ComentarioBlog", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.Comentario", "Comentario")
                        .WithMany("ComentarioBlog")
                        .HasForeignKey("ComentarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comentario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.ComentarioCuestion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.Comentario", "Comentario")
                        .WithMany("ComentarioCuestion")
                        .HasForeignKey("ComentarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comentario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.VotoComentario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.Comentario", "Comentario")
                        .WithMany("VotoComentario")
                        .HasForeignKey("ComentarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Voto.Voto", "Voto")
                        .WithMany("VotoComentario")
                        .HasForeignKey("VotoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comentario");

                    b.Navigation("Voto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ComparticionAutomatica.ComparticionAutomaticaMapping", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ComparticionAutomatica.ComparticionAutomatica", "ComparticionAutomatica")
                        .WithMany("ComparticionAutomaticaMapping")
                        .HasForeignKey("ComparticionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ComparticionAutomatica");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ComparticionAutomatica.ComparticionAutomaticaReglas", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ComparticionAutomatica.ComparticionAutomatica", "ComparticionAutomatica")
                        .WithMany("ComparticionAutomaticaReglas")
                        .HasForeignKey("ComparticionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ComparticionAutomatica");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Cookies.CategoriaProyectoCookie", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("CategoriaProyectoCookie")
                        .HasForeignKey("ProyectoID", "OrganizacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Cookies.ProyectoCookie", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Cookies.CategoriaProyectoCookie", "CategoriaProyectoCookie")
                        .WithMany("ProyectoCookie")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("ProyectoCookie")
                        .HasForeignKey("ProyectoID", "OrganizacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoriaProyectoCookie");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.AtributoFichaBibliografica", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.FichaBibliografica", "FichaBibliografica")
                        .WithMany("AtributoFichaBibliografica")
                        .HasForeignKey("FichaBibliograficaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FichaBibliografica");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.BaseRecursosOrganizacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.BaseRecursos", "BaseRecursos")
                        .WithMany("BaseRecursosOrganizacion")
                        .HasForeignKey("BaseRecursosID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.Organizacion", "Organizacion")
                        .WithMany("BaseRecursosOrganizacion")
                        .HasForeignKey("OrganizacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseRecursos");

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.BaseRecursosProyecto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.BaseRecursos", "BaseRecursos")
                        .WithMany("BaseRecursosProyecto")
                        .HasForeignKey("BaseRecursosID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BaseRecursos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.BaseRecursosUsuario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.BaseRecursos", "BaseRecursos")
                        .WithMany("BaseRecursosUsuario")
                        .HasForeignKey("BaseRecursosID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithMany("BaseRecursosUsuario")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BaseRecursos");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Identidad", "Creador")
                        .WithMany("Documentos")
                        .HasForeignKey("CreadorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creador");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoAtributoBiblio", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.AtributoFichaBibliografica", "AtributoFichaBibliografica")
                        .WithMany("DocumentoAtributoBiblio")
                        .HasForeignKey("AtributoID", "FichaBibliograficaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AtributoFichaBibliografica");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoComentario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.Comentario", "Comentario")
                        .WithMany("DocumentoComentario")
                        .HasForeignKey("ComentarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comentario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoLecturaAumentada", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", "Documento")
                        .WithOne("DocumentoLecturaAumentada")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoLecturaAumentada", "DocumentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoMetaDatos", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", "Documento")
                        .WithOne("DocumentoMetaDatos")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoMetaDatos", "DocumentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoRespuestaVoto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", "Documento")
                        .WithMany("DocumentoRespuestaVoto")
                        .HasForeignKey("DocumentoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoRespuesta", "DocumentoRespuesta")
                        .WithMany("DocumentoRespuestaVoto")
                        .HasForeignKey("RespuestaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Documento");

                    b.Navigation("DocumentoRespuesta");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoRolGrupoIdentidades", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", "Documento")
                        .WithMany("DocumentoRolGrupoIdentidades")
                        .HasForeignKey("DocumentoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Documento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoRolIdentidad", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", "Documento")
                        .WithMany("DocumentoRolIdentidad")
                        .HasForeignKey("DocumentoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Documento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoTipologia", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Tipologia", "Tipologia")
                        .WithMany("DocumentoTipologia")
                        .HasForeignKey("TipologiaID", "AtributoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tipologia");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoVincDoc", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", "Documento")
                        .WithMany("DocumentoVincDoc")
                        .HasForeignKey("DocumentoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", "Documento1")
                        .WithMany("DocumentoVincDoc1")
                        .HasForeignKey("DocumentoVincID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Documento");

                    b.Navigation("Documento1");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoWebAgCatTesauro", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CategoriaTesauro", "CategoriaTesauro")
                        .WithMany("DocumentoWebAgCatTesauro")
                        .HasForeignKey("TesauroID", "CategoriaTesauroID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoriaTesauro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoWebVinBaseRecursos", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.BaseRecursos", "BaseRecursos")
                        .WithMany("DocumentoWebVinBaseRecursos")
                        .HasForeignKey("BaseRecursosID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", "Documento")
                        .WithMany("DocumentoWebVinBaseRecursos")
                        .HasForeignKey("DocumentoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.NivelCertificacion", "NivelCertificacion")
                        .WithMany("DocumentoWebVinBaseRecursos")
                        .HasForeignKey("NivelCertificacionID");

                    b.Navigation("BaseRecursos");

                    b.Navigation("Documento");

                    b.Navigation("NivelCertificacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoWebVinBaseRecursosExtra", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoWebVinBaseRecursos", "DocumentoWebVinBaseRecursos")
                        .WithOne("DocumentoWebVinBaseRecursosExtra")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoWebVinBaseRecursosExtra", "DocumentoID", "BaseRecursosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentoWebVinBaseRecursos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.HistorialDocumento", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", "Documento")
                        .WithMany("HistorialDocumento")
                        .HasForeignKey("DocumentoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Documento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.VersionDocumento", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", "Documento")
                        .WithOne("VersionDocumento")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.VersionDocumento", "DocumentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.VotoDocumento", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", "Documento")
                        .WithMany("VotoDocumento")
                        .HasForeignKey("DocumentoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Voto.Voto", "Voto")
                        .WithMany("VotoDocumento")
                        .HasForeignKey("VotoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Documento");

                    b.Navigation("Voto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaFiltroHome", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaHome", "FacetaHome")
                        .WithMany("FacetaFiltroHome")
                        .HasForeignKey("OrganizacionID", "ProyectoID", "ObjetoConocimiento", "Faceta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FacetaHome");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaFiltroProyecto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaObjetoConocimientoProyecto", "FacetaObjetoConocimientoProyecto")
                        .WithMany("FacetaFiltroProyecto")
                        .HasForeignKey("OrganizacionID", "ProyectoID", "ObjetoConocimiento", "Faceta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FacetaObjetoConocimientoProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaHome", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaObjetoConocimientoProyecto", "FacetaObjetoConocimientoProyecto")
                        .WithMany()
                        .HasForeignKey("FacetaObjetoConocimientoProyectoOrganizacionID", "FacetaObjetoConocimientoProyectoProyectoID", "FacetaObjetoConocimientoProyectoObjetoConocimiento", "FacetaObjetoConocimientoProyectoFaceta");

                    b.Navigation("FacetaObjetoConocimientoProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaObjetoConocimientoProyectoPestanya", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", "ProyectoPestanyaMenu")
                        .WithMany("FacetaObjetoConocimientoProyectoPestanya")
                        .HasForeignKey("PestanyaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("FacetaObjetoConocimientoProyectoPestanya")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaObjetoConocimientoProyecto", "FacetaObjetoConocimientoProyecto")
                        .WithMany("FacetaObjetoConocimientoProyectoPestanya")
                        .HasForeignKey("OrganizacionID", "ProyectoID", "ObjetoConocimiento", "Faceta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FacetaObjetoConocimientoProyecto");

                    b.Navigation("Proyecto");

                    b.Navigation("ProyectoPestanyaMenu");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.AmigoAgGrupo", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoAmigos", "GrupoAmigos")
                        .WithMany("AmigoAgGrupo")
                        .HasForeignKey("GrupoAmigosGrupoID");

                    b.Navigation("GrupoAmigos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.DatoExtraEcosistemaOpcionPerfil", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Perfil", "Perfil")
                        .WithMany("DatoExtraEcosistemaOpcionPerfil")
                        .HasForeignKey("PerfilID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.DatoExtraProyectoVirtuosoIdentidad", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Identidad", "Identidad")
                        .WithMany("DatoExtraProyectoVirtuosoIdentidad")
                        .HasForeignKey("IdentidadID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraProyectoVirtuoso", "DatoExtraProyectoVirtuoso")
                        .WithMany("DatoExtraProyectoVirtuosoIdentidad")
                        .HasForeignKey("OrganizacionID", "ProyectoID", "DatoExtraID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DatoExtraProyectoVirtuoso");

                    b.Navigation("Identidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoIdentidadesOrganizacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoIdentidades", "GrupoIdentidades")
                        .WithMany("GrupoIdentidadesOrganizacion")
                        .HasForeignKey("GrupoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GrupoIdentidades");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoIdentidadesParticipacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoIdentidades", "GrupoIdentidades")
                        .WithMany("GrupoIdentidadesParticipacion")
                        .HasForeignKey("GrupoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Identidad", "Identidad")
                        .WithMany("GrupoIdentidadesParticipacion")
                        .HasForeignKey("IdentidadID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GrupoIdentidades");

                    b.Navigation("Identidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoIdentidadesProyecto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoIdentidades", "GrupoIdentidades")
                        .WithMany("GrupoIdentidadesProyecto")
                        .HasForeignKey("GrupoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GrupoIdentidades");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Identidad", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Perfil", "Perfil")
                        .WithMany("Identidad")
                        .HasForeignKey("PerfilID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.IdentidadContadores", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Identidad", "Identidad")
                        .WithOne("IdentidadContadores")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.IdentidadContadores", "IdentidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Identidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Perfil", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.Persona", "Persona")
                        .WithMany("Perfil")
                        .HasForeignKey("PersonaID");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.PerfilPersona", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Perfil", "Perfil")
                        .WithOne("PerfilPersona")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.PerfilPersona", "PerfilID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.PerfilPersonaOrg", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Perfil", "Perfil")
                        .WithMany("PerfilPersonaOrg")
                        .HasForeignKey("PerfilID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Profesor", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Perfil", "Perfil")
                        .WithMany("Profesor")
                        .HasForeignKey("PerfilID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.Invitacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.Notificacion", "Notificacion")
                        .WithMany("Invitacion")
                        .HasForeignKey("NotificacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Notificacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionAlertaPersona", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.Notificacion", "Notificacion")
                        .WithMany("NotificacionAlertaPersona")
                        .HasForeignKey("NotificacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Notificacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionCorreoPersona", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.Notificacion", "Notificacion")
                        .WithMany("NotificacionCorreoPersona")
                        .HasForeignKey("NotificacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Notificacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionEnvioMasivo", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.Notificacion", "Notificacion")
                        .WithOne("NotificacionEnvioMasivo")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionEnvioMasivo", "NotificacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notificacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionParametro", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.Notificacion", "Notificacion")
                        .WithMany("NotificacionParametro")
                        .HasForeignKey("NotificacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Notificacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionParametroPersona", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.Notificacion", "Notificacion")
                        .WithMany("NotificacionParametroPersona")
                        .HasForeignKey("NotificacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Notificacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionSolicitud", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.Notificacion", "Notificacion")
                        .WithMany("NotificacionSolicitud")
                        .HasForeignKey("NotificacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.Solicitud", "Solicitud")
                        .WithMany("NotificacionSolicitud")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Notificacion");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.NotificacionSuscripcion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.Notificacion", "Notificacion")
                        .WithMany("NotificacionSuscripcion")
                        .HasForeignKey("NotificacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Notificacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.ConfiguracionGnossOrg", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.Organizacion", "Organizacion")
                        .WithOne("ConfiguracionGnossOrg")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.ConfiguracionGnossOrg", "OrganizacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.Organizacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.Organizacion", "Organizacion2")
                        .WithMany("Organizacion1")
                        .HasForeignKey("OrganizacionPadreID");

                    b.Navigation("Organizacion2");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.OrganizacionEmpresa", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.Organizacion", "Organizacion")
                        .WithOne("OrganizacionEmpresa")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.OrganizacionEmpresa", "OrganizacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.OrganizacionGnoss", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.Organizacion", "Organizacion")
                        .WithOne("OrganizacionGnoss")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.OrganizacionGnoss", "OrganizacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.OrganizacionParticipaProy", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Identidad", "Identidad")
                        .WithMany("OrganizacionParticipaProyecto")
                        .HasForeignKey("IdentidadID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.Organizacion", "Organizacion")
                        .WithMany("OrganizacionParticipaProy")
                        .HasForeignKey("OrganizacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Identidad");

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.PersonaVinculoOrganizacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.Organizacion", "Organizacion")
                        .WithMany("PersonaVinculoOrganizacion")
                        .HasForeignKey("OrganizacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Pais.Provincia", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Pais.Pais", "Pais")
                        .WithMany("Provincia")
                        .HasForeignKey("PaisID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ParametroGeneralDS.ProyectoElementoHTMLRol", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ParametroGeneralDS.ProyectoElementoHtml", "ProyectoElementoHtml")
                        .WithMany("ProyectoElementoHTMLRol")
                        .HasForeignKey("OrganizacionID", "ProyectoID", "ElementoHeadID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProyectoElementoHtml");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.ConfiguracionGnossPersona", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.Persona", "Persona")
                        .WithOne("ConfiguracionGnossPersona")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.ConfiguracionGnossPersona", "PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.DatosTrabajoPersonaLibre", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.Persona", "Persona")
                        .WithOne("DatosTrabajoPersonaLibre")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.DatosTrabajoPersonaLibre", "PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.Persona", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithMany("Persona")
                        .HasForeignKey("UsuarioID");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionInvitaContacto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.Peticion", "Peticion")
                        .WithOne("PeticionInvitaContacto")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionInvitaContacto", "PeticionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peticion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionInvitacionComunidad", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.Peticion", "Peticion")
                        .WithOne("PeticionInvitacionComunidad")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionInvitacionComunidad", "PeticionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peticion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionInvitacionGrupo", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.Peticion", "Peticion")
                        .WithOne("PeticionInvitacionGrupo")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionInvitacionGrupo", "PeticionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peticion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionNuevoProyecto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.Peticion", "Peticion")
                        .WithOne("PeticionNuevoProyecto")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionNuevoProyecto", "PeticionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peticion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionOrgInvitaPers", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.Peticion", "Peticion")
                        .WithOne("PeticionOrgInvitaPers")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.PeticionOrgInvitaPers", "PeticionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peticion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.AdministradorGrupoProyecto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("AdministradorGrupoProyecto")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.AdministradorProyecto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("AdministradorProyecto")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ConfigAutocompletarProy", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", "ProyectoPestanyaMenu")
                        .WithMany("ConfigAutocompletarProy")
                        .HasForeignKey("PestanyaID");

                    b.Navigation("ProyectoPestanyaMenu");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraEcosistemaOpcion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraEcosistema", "DatoExtraEcosistema")
                        .WithMany("DatoExtraEcosistemaOpcion")
                        .HasForeignKey("DatoExtraID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DatoExtraEcosistema");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraProyectoOpcion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraProyecto", "DatoExtraProyecto")
                        .WithMany("DatoExtraProyectoOpcion")
                        .HasForeignKey("OrganizacionID", "ProyectoID", "DatoExtraID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DatoExtraProyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraProyectoOpcionIdentidad", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Identidad", "Identidad")
                        .WithMany("DatoExtraProyectoOpcionIdentidad")
                        .HasForeignKey("IdentidadID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Identidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.NivelCertificacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("NivelCertificacion")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionListadoSemantico", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("PresentacionListadoSemantico")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionMapaSemantico", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("PresentacionMapaSemantico")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionMosaicoSemantico", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("PresentacionMosaicoSemantico")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionPersonalizadoSemantico", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("PresentacionPersonalizadoSemantico")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionPestanyaListadoSemantico", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", "ProyectoPestanyaMenu")
                        .WithMany("PresentacionPestanyaListadoSemantico")
                        .HasForeignKey("PestanyaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("PresentacionPestanyaListadoSemantico")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("ProyectoPestanyaMenu");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionPestanyaMapaSemantico", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", "ProyectoPestanyaMenu")
                        .WithMany("PresentacionPestanyaMapaSemantico")
                        .HasForeignKey("PestanyaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("PresentacionPestanyaMapaSemantico")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("ProyectoPestanyaMenu");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.PresentacionPestanyaMosaicoSemantico", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", "ProyectoPestanyaMenu")
                        .WithMany("PresentacionPestanyaMosaicoSemantico")
                        .HasForeignKey("PestanyaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("PresentacionPestanyaMosaicoSemantico")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("ProyectoPestanyaMenu");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto2")
                        .WithMany("Proyecto1")
                        .HasForeignKey("OrganizacionID", "ProyectoSuperiorID");

                    b.Navigation("Proyecto2");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoAgCatTesauro", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("ProyectoAgCatTesauro")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoCerradoTmp", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithOne("ProyectoCerradoTmp")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoCerradoTmp", "OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoCerrandose", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithOne("ProyectoCerrandose")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoCerrandose", "OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoEventoParticipante", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoEvento", "ProyectoEvento")
                        .WithMany("ProyectoEventoParticipante")
                        .HasForeignKey("EventoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProyectoEvento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGadget", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("ProyectoGadget")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGadgetContextoHTMLplano", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGadget", "ProyectoGadget")
                        .WithOne("ProyectoGadgetContextoHTMLplano")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGadgetContextoHTMLplano", "OrganizacionID", "ProyectoID", "GadgetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProyectoGadget");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGadgetIdioma", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGadget", "ProyectoGadget")
                        .WithMany("ProyectoGadgetIdioma")
                        .HasForeignKey("GadgetID", "OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProyectoGadget");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGrafoFichaRec", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("ProyectoGrafoFichaRec")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoLoginConfiguracion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithOne("ProyectoLoginConfiguracion")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoLoginConfiguracion", "OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPasoRegistro", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("ProyectoPasoRegistro")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusqueda", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", "ProyectoPestanyaMenu")
                        .WithOne("ProyectoPestanyaBusqueda")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusqueda", "PestanyaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProyectoPestanyaMenu");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusquedaExportacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusqueda", "ProyectoPestanyaBusqueda")
                        .WithMany("ProyectoPestanyaBusquedaExportacion")
                        .HasForeignKey("PestanyaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProyectoPestanyaBusqueda");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusquedaExportacionExterna", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusquedaExportacion", "ProyectoPestanyaBusquedaExportacion")
                        .WithOne("ProyectoPestanyaBusquedaExportacionExterna")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusquedaExportacionExterna", "ExportacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProyectoPestanyaBusquedaExportacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusquedaExportacionPropiedad", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusquedaExportacion", "ProyectoPestanyaBusquedaExportacion")
                        .WithMany("ProyectoPestanyaBusquedaExportacionPropiedad")
                        .HasForeignKey("ExportacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProyectoPestanyaBusquedaExportacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusquedaPesoOC", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusqueda", "ProyectoPestanyaBusqueda")
                        .WithMany("ProyectoPestanyaBusquedaPesoOC")
                        .HasForeignKey("PestanyaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.OntologiaProyecto", "OntologiaProyecto")
                        .WithMany("ProyectoPestanyaBusquedaPesoOC")
                        .HasForeignKey("OrganizacionID", "ProyectoID", "OntologiaProyecto1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OntologiaProyecto");

                    b.Navigation("ProyectoPestanyaBusqueda");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaCMS", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", "ProyectoPestanyaMenu")
                        .WithMany("ProyectoPestanyaCMS")
                        .HasForeignKey("PestanyaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProyectoPestanyaMenu");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaDashboardAsistente", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", "ProyectoPestanyaMenu")
                        .WithMany("ProyectoPestanyaDashboardAsistente")
                        .HasForeignKey("PestanyaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProyectoPestanyaMenu");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaDashboardAsistenteDataset", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaDashboardAsistente", "ProyectoPestanyaDashboardAsistente")
                        .WithMany("ProyectoPestanyaDashboardAsistenteDataset")
                        .HasForeignKey("AsisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProyectoPestanyaDashboardAsistente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaFiltroOrdenRecursos", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", "ProyectoPestanyaMenu")
                        .WithMany("ProyectoPestanyaFiltroOrdenRecursos")
                        .HasForeignKey("PestanyaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProyectoPestanyaMenu");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", "ProyectoPestanyaMenu2")
                        .WithMany("ProyectoPestanyaMenu1")
                        .HasForeignKey("PestanyaPadreID");

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("ProyectoPestanyaMenu")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("ProyectoPestanyaMenu2");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenuRolGrupoIdentidades", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", "ProyectoPestanyaMenu")
                        .WithMany("ProyectoPestanyaMenuRolGrupoIdentidades")
                        .HasForeignKey("PestanyaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProyectoPestanyaMenu");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenuRolIdentidad", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", "ProyectoPestanyaMenu")
                        .WithMany("ProyectoPestanyaMenuRolIdentidad")
                        .HasForeignKey("PestanyaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProyectoPestanyaMenu");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaRolGrupoIdentidades", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanya", "ProyectoPestanya")
                        .WithMany("ProyectoPestanyaRolGrupoIdentidades")
                        .HasForeignKey("ProyectoID", "Nombre")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProyectoPestanya");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaRolIdentidad", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanya", "ProyectoPestanya")
                        .WithMany("ProyectoPestanyaRolIdentidad")
                        .HasForeignKey("ProyectoID", "Nombre")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProyectoPestanya");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoRelacionado", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("ProyectoRelacionado")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto1")
                        .WithMany("ProyectoRelacionado1")
                        .HasForeignKey("OrganizacionRelacionadaID", "ProyectoRelacionadoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Proyecto1");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoSearchPersonalizado", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("ProyectoSearchPersonalizado")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoServicioExterno", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("ProyectoServicioExterno")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectosMasActivos", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithOne("ProyectosMasActivos")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectosMasActivos", "OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.RedireccionValorParametro", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.RedireccionRegistroRuta", "RedireccionRegistroRuta")
                        .WithMany("RedireccionValorParametro")
                        .HasForeignKey("RedireccionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RedireccionRegistroRuta");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.Rol", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("Rol")
                        .HasForeignKey("ProyectoID", "OrganizacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.RolEcosistemaUsuario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.RolEcosistema", "RolEcosistema")
                        .WithMany("RolEcosistemaUsuario")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithMany("RolEcosistemaUsuario")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolEcosistema");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.RolGrupoIdentidades", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoIdentidades", "GrupoIdentidades")
                        .WithMany("RolGrupoIdentidades")
                        .HasForeignKey("GrupoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.Rol", "Rol")
                        .WithMany("RolGrupoIdentidades")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoIdentidades");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.RolIdentidad", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Identidad", "Identidad")
                        .WithMany("RolIdentidad")
                        .HasForeignKey("IdentidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.Rol", "Rol")
                        .WithMany("RolIdentidad")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Identidad");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Sitemaps.Sitemaps", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Sitemaps.SitemapsIndex", "SitemapIndex")
                        .WithMany("Indexlist")
                        .HasForeignKey("Dominio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SitemapIndex");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.DatoExtraEcosistemaOpcionSolicitud", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.Solicitud", "Solicitud")
                        .WithMany("DatoExtraEcosistemaOpcionSolicitud")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.DatoExtraEcosistemaVirtuosoSolicitud", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.Solicitud", "Solicitud")
                        .WithMany("DatoExtraEcosistemaVirtuosoSolicitud")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.DatoExtraProyectoOpcionSolicitud", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.Solicitud", "Solicitud")
                        .WithMany("DatoExtraProyectoOpcionSolicitud")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.DatoExtraProyectoVirtuosoSolicitud", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraProyectoVirtuoso", "DatoExtraProyectoVirtuoso")
                        .WithMany("DatoExtraProyectoVirtuosoSolicitud")
                        .HasForeignKey("OrganizacionID", "ProyectoID", "DatoExtraID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DatoExtraProyectoVirtuoso");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudGrupo", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.Solicitud", "Solicitud")
                        .WithMany("SolicitudGrupo")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudNuevaOrgEmp", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudNuevaOrganizacion", "SolicitudNuevaOrganizacion")
                        .WithOne("SolicitudNuevaOrgEmp")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudNuevaOrgEmp", "SolicitudID", "UsuarioAdminID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolicitudNuevaOrganizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudNuevaOrganizacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.Solicitud", "Solicitud")
                        .WithMany("SolicitudNuevaOrganizacion")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudNuevoProfesor", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.Solicitud", "Solicitud")
                        .WithMany("SolicitudNuevoProfesor")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudNuevoUsuario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudOrganizacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.Solicitud", "Solicitud")
                        .WithMany("SolicitudOrganizacion")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudUsuario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.Solicitud", "Solicitud")
                        .WithMany("SolicitudUsuario")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.CategoriaTesVinSuscrip", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.Suscripcion", "Suscripcion")
                        .WithMany("CategoriaTesVinSuscrip")
                        .HasForeignKey("SuscripcionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Suscripcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionBlog", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.Suscripcion", "Suscripcion")
                        .WithMany("SuscripcionBlog")
                        .HasForeignKey("SuscripcionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Suscripcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionIdentidadProyecto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.Suscripcion", "Suscripcion")
                        .WithMany("SuscripcionIdentidadProyecto")
                        .HasForeignKey("SuscripcionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Suscripcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionTesauroOrganizacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.Suscripcion", "Suscripcion")
                        .WithOne("SuscripcionTesauroOrganizacion")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionTesauroOrganizacion", "SuscripcionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Suscripcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionTesauroProyecto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.Suscripcion", "Suscripcion")
                        .WithOne("SuscripcionTesauroProyecto")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionTesauroProyecto", "SuscripcionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Suscripcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionTesauroUsuario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.Suscripcion", "Suscripcion")
                        .WithOne("SuscripcionTesauroUsuario")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.SuscripcionTesauroUsuario", "SuscripcionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Suscripcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CatTesauroAgCatTesauro", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CategoriaTesauro", "CategoriaTesauro")
                        .WithMany("CatTesauroAgCatTesauroInferior")
                        .HasForeignKey("TesauroID", "CategoriaInferiorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CategoriaTesauro", "CategoriaTesuaro1")
                        .WithMany("CatTesauroAgCatTesauroSuperior")
                        .HasForeignKey("TesauroID", "CategoriaSuperiorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CatTesauroAgCatTesauro_CategoriaTesauro_TesauroID_Categori~1");

                    b.Navigation("CategoriaTesauro");

                    b.Navigation("CategoriaTesuaro1");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CatTesauroCompartida", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CategoriaTesauro", "CategoriaTesauro")
                        .WithMany("CatTesauroCompartida")
                        .HasForeignKey("TesauroDestinoID", "CategoriaSupDestinoID");

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CategoriaTesauro", "CategoriaTesauro1")
                        .WithMany("CatTesauroCompartida1")
                        .HasForeignKey("TesauroOrigenID", "CategoriaOrigenID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoriaTesauro");

                    b.Navigation("CategoriaTesauro1");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CategoriaTesauro", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.Tesauro", "Tesauro")
                        .WithMany("CategoriaTesauro")
                        .HasForeignKey("TesauroID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tesauro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CategoriaTesauroSugerencia", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.Tesauro", "Tesauro")
                        .WithMany("CategoriaTesauroSugerencia")
                        .HasForeignKey("TesauroSugerenciaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CategoriaTesauro", "CategoriaTesauro")
                        .WithMany("CategoriaTesauroSugerencia")
                        .HasForeignKey("TesauroCatPadreID", "CategoriaTesauroPadreID");

                    b.Navigation("CategoriaTesauro");

                    b.Navigation("Tesauro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.TesauroOrganizacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.Tesauro", "Tesauro")
                        .WithMany("TesauroOrganizacion")
                        .HasForeignKey("TesauroID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tesauro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.TesauroProyecto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.Tesauro", "Tesauro")
                        .WithMany("TesauroProyecto")
                        .HasForeignKey("TesauroID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tesauro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.TesauroUsuario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.Tesauro", "Tesauro")
                        .WithMany("TesauroUsuario")
                        .HasForeignKey("TesauroID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithMany("TesauroUsuario")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tesauro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.AdministradorGeneral", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithOne("AdministradorGeneral")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.AdministradorGeneral", "UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.AdministradorOrganizacion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.Organizacion", "Organizacion")
                        .WithMany("AdministradorOrganizacion")
                        .HasForeignKey("OrganizacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithMany("AdministradorOrganizacion")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Organizacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.GeneralRolUsuario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithOne("GeneralRolUsuario")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.GeneralRolUsuario", "UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.GrupoUsuarioUsuario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithMany("GrupoUsuarioUsuario")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.InicioSesion", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithOne("InicioSesion")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.InicioSesion", "UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.OrganizacionRolUsuario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithMany("OrganizacionRolUsuario")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.ProyRolUsuClausulaReg", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.ClausulaRegistro", "ClausulaRegistro")
                        .WithMany("ProyRolUsuClausulaReg")
                        .HasForeignKey("ClausulaID", "OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.ProyectoRolUsuario", "ProyectoRolUsuario")
                        .WithMany("ProyRolUsuClausulaReg")
                        .HasForeignKey("OrganizacionGnossID", "ProyectoID", "UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClausulaRegistro");

                    b.Navigation("ProyectoRolUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.ProyectoRolUsuario", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", null)
                        .WithMany("ProyectoRolUsuario")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.ProyectoUsuarioIdentidad", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Identidad", "Identidad")
                        .WithMany("ProyectoUsuarioIdentidad")
                        .HasForeignKey("IdentidadID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithMany("ProyectoUsuarioIdentidad")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("ProyectoUsuarioIdentidad")
                        .HasForeignKey("OrganizacionGnossID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Identidad");

                    b.Navigation("Proyecto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.UsuarioContadores", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithOne("UsuarioContadores")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.UsuarioContadores", "UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.UsuarioRedirect", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithOne("UsuarioRedirect")
                        .HasForeignKey("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.UsuarioRedirect", "UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.UsuarioVinculadoLoginRedesSociales", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", "Usuario")
                        .WithMany("UsuarioVinculadoLoginRedesSociales")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtual", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualPersonalizacion", "VistaVirtualPersonalizacion")
                        .WithMany("VistaVirtual")
                        .HasForeignKey("PersonalizacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VistaVirtualPersonalizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualCMS", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualPersonalizacion", "VistaVirtualPersonalizacion")
                        .WithMany("VistaVirtualCMS")
                        .HasForeignKey("PersonalizacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VistaVirtualPersonalizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualDominio", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualPersonalizacion", "VistaVirtualPersonalizacion")
                        .WithMany("VistaVirtualDominio")
                        .HasForeignKey("PersonalizacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VistaVirtualPersonalizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualGadgetRecursos", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualPersonalizacion", "VistaVirtualPersonalizacion")
                        .WithMany("VistaVirtualGadgetRecursos")
                        .HasForeignKey("PersonalizacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VistaVirtualPersonalizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualProyecto", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualPersonalizacion", "VistaVirtualPersonalizacion")
                        .WithMany("VistaVirtualProyecto")
                        .HasForeignKey("PersonalizacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VistaVirtualPersonalizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualRecursos", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualPersonalizacion", "VistaVirtualPersonalizacion")
                        .WithMany("VistaVirtualRecursos")
                        .HasForeignKey("PersonalizacionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VistaVirtualPersonalizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Voto.VotoEntradaBlog", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Voto.Voto", "Voto")
                        .WithMany("VotoEntradaBlog")
                        .HasForeignKey("VotoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Voto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Voto.VotoMensajeForo", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.Voto.Voto", "Voto")
                        .WithMany("VotoMensajeForo")
                        .HasForeignKey("VotoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Voto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.ProyectoSinRegistroObligatorio", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.ProyectoRegistroObligatorio", "ProyectoRegistroObligatorio")
                        .WithMany("ListaProyectoSinRegistroObligatorio")
                        .HasForeignKey("OrganizacionSinRegistroID", "ProyectoSinRegistroID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProyectoRegistroObligatorio");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.TareasSegundoPlano.TareasSegundoPlano", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", "Proyecto")
                        .WithMany("TareasSegundoPlano")
                        .HasForeignKey("OrganizacionID", "ProyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Blog.Blog", b =>
                {
                    b.Navigation("BlogAgCatTesauro");

                    b.Navigation("BlogComunidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSBloque", b =>
                {
                    b.Navigation("CMSBloqueComponente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSBloqueComponente", b =>
                {
                    b.Navigation("CMSBloqueComponentePropiedadComponente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSComponente", b =>
                {
                    b.Navigation("CMSBloqueComponente");

                    b.Navigation("CMSComponenteRolGrupoIdentidades");

                    b.Navigation("CMSComponenteRolIdentidad");

                    b.Navigation("CMSPropiedadComponente");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.CMS.CMSPagina", b =>
                {
                    b.Navigation("CMSBloque");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Carga.Carga", b =>
                {
                    b.Navigation("CargaPaquete");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Comentario.Comentario", b =>
                {
                    b.Navigation("Comentario1");

                    b.Navigation("ComentarioBlog");

                    b.Navigation("ComentarioCuestion");

                    b.Navigation("DocumentoComentario");

                    b.Navigation("VotoComentario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ComparticionAutomatica.ComparticionAutomatica", b =>
                {
                    b.Navigation("ComparticionAutomaticaMapping");

                    b.Navigation("ComparticionAutomaticaReglas");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Cookies.CategoriaProyectoCookie", b =>
                {
                    b.Navigation("ProyectoCookie");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.AtributoFichaBibliografica", b =>
                {
                    b.Navigation("DocumentoAtributoBiblio");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.BaseRecursos", b =>
                {
                    b.Navigation("BaseRecursosOrganizacion");

                    b.Navigation("BaseRecursosProyecto");

                    b.Navigation("BaseRecursosUsuario");

                    b.Navigation("DocumentoWebVinBaseRecursos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Documento", b =>
                {
                    b.Navigation("DocumentoLecturaAumentada");

                    b.Navigation("DocumentoMetaDatos");

                    b.Navigation("DocumentoRespuestaVoto");

                    b.Navigation("DocumentoRolGrupoIdentidades");

                    b.Navigation("DocumentoRolIdentidad");

                    b.Navigation("DocumentoVincDoc");

                    b.Navigation("DocumentoVincDoc1");

                    b.Navigation("DocumentoWebVinBaseRecursos");

                    b.Navigation("HistorialDocumento");

                    b.Navigation("VersionDocumento");

                    b.Navigation("VotoDocumento");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoRespuesta", b =>
                {
                    b.Navigation("DocumentoRespuestaVoto");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.DocumentoWebVinBaseRecursos", b =>
                {
                    b.Navigation("DocumentoWebVinBaseRecursosExtra");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.FichaBibliografica", b =>
                {
                    b.Navigation("AtributoFichaBibliografica");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Documentacion.Tipologia", b =>
                {
                    b.Navigation("DocumentoTipologia");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaHome", b =>
                {
                    b.Navigation("FacetaFiltroHome");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.FacetaObjetoConocimientoProyecto", b =>
                {
                    b.Navigation("FacetaFiltroProyecto");

                    b.Navigation("FacetaObjetoConocimientoProyectoPestanya");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Faceta.OntologiaProyecto", b =>
                {
                    b.Navigation("ProyectoPestanyaBusquedaPesoOC");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoAmigos", b =>
                {
                    b.Navigation("AmigoAgGrupo");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.GrupoIdentidades", b =>
                {
                    b.Navigation("GrupoIdentidadesOrganizacion");

                    b.Navigation("GrupoIdentidadesParticipacion");

                    b.Navigation("GrupoIdentidadesProyecto");

                    b.Navigation("RolGrupoIdentidades");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Identidad", b =>
                {
                    b.Navigation("DatoExtraProyectoOpcionIdentidad");

                    b.Navigation("DatoExtraProyectoVirtuosoIdentidad");

                    b.Navigation("Documentos");

                    b.Navigation("GrupoIdentidadesParticipacion");

                    b.Navigation("IdentidadContadores");

                    b.Navigation("OrganizacionParticipaProyecto");

                    b.Navigation("ProyectoUsuarioIdentidad");

                    b.Navigation("RolIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.IdentidadDS.Perfil", b =>
                {
                    b.Navigation("DatoExtraEcosistemaOpcionPerfil");

                    b.Navigation("Identidad");

                    b.Navigation("PerfilPersona");

                    b.Navigation("PerfilPersonaOrg");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Notificacion.Notificacion", b =>
                {
                    b.Navigation("Invitacion");

                    b.Navigation("NotificacionAlertaPersona");

                    b.Navigation("NotificacionCorreoPersona");

                    b.Navigation("NotificacionEnvioMasivo");

                    b.Navigation("NotificacionParametro");

                    b.Navigation("NotificacionParametroPersona");

                    b.Navigation("NotificacionSolicitud");

                    b.Navigation("NotificacionSuscripcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.OrganizacionDS.Organizacion", b =>
                {
                    b.Navigation("AdministradorOrganizacion");

                    b.Navigation("BaseRecursosOrganizacion");

                    b.Navigation("ConfiguracionGnossOrg");

                    b.Navigation("Organizacion1");

                    b.Navigation("OrganizacionEmpresa");

                    b.Navigation("OrganizacionGnoss");

                    b.Navigation("OrganizacionParticipaProy");

                    b.Navigation("PersonaVinculoOrganizacion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Pais.Pais", b =>
                {
                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ParametroGeneralDS.ProyectoElementoHtml", b =>
                {
                    b.Navigation("ProyectoElementoHTMLRol");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.PersonaDS.Persona", b =>
                {
                    b.Navigation("ConfiguracionGnossPersona");

                    b.Navigation("DatosTrabajoPersonaLibre");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Peticion.Peticion", b =>
                {
                    b.Navigation("PeticionInvitaContacto");

                    b.Navigation("PeticionInvitacionComunidad");

                    b.Navigation("PeticionInvitacionGrupo");

                    b.Navigation("PeticionNuevoProyecto");

                    b.Navigation("PeticionOrgInvitaPers");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraEcosistema", b =>
                {
                    b.Navigation("DatoExtraEcosistemaOpcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraProyecto", b =>
                {
                    b.Navigation("DatoExtraProyectoOpcion");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.DatoExtraProyectoVirtuoso", b =>
                {
                    b.Navigation("DatoExtraProyectoVirtuosoIdentidad");

                    b.Navigation("DatoExtraProyectoVirtuosoSolicitud");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.NivelCertificacion", b =>
                {
                    b.Navigation("DocumentoWebVinBaseRecursos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.Proyecto", b =>
                {
                    b.Navigation("AdministradorGrupoProyecto");

                    b.Navigation("AdministradorProyecto");

                    b.Navigation("CategoriaProyectoCookie");

                    b.Navigation("ConfiguracionCachesCostosas");

                    b.Navigation("FacetaObjetoConocimientoProyectoPestanya");

                    b.Navigation("NivelCertificacion");

                    b.Navigation("PresentacionListadoSemantico");

                    b.Navigation("PresentacionMapaSemantico");

                    b.Navigation("PresentacionMosaicoSemantico");

                    b.Navigation("PresentacionPersonalizadoSemantico");

                    b.Navigation("PresentacionPestanyaListadoSemantico");

                    b.Navigation("PresentacionPestanyaMapaSemantico");

                    b.Navigation("PresentacionPestanyaMosaicoSemantico");

                    b.Navigation("Proyecto1");

                    b.Navigation("ProyectoAgCatTesauro");

                    b.Navigation("ProyectoCerradoTmp");

                    b.Navigation("ProyectoCerrandose");

                    b.Navigation("ProyectoCookie");

                    b.Navigation("ProyectoGadget");

                    b.Navigation("ProyectoGrafoFichaRec");

                    b.Navigation("ProyectoLoginConfiguracion");

                    b.Navigation("ProyectoPasoRegistro");

                    b.Navigation("ProyectoPestanyaMenu");

                    b.Navigation("ProyectoRelacionado");

                    b.Navigation("ProyectoRelacionado1");

                    b.Navigation("ProyectoSearchPersonalizado");

                    b.Navigation("ProyectoServicioExterno");

                    b.Navigation("ProyectoUsuarioIdentidad");

                    b.Navigation("ProyectosMasActivos");

                    b.Navigation("Rol");

                    b.Navigation("TareasSegundoPlano");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoEvento", b =>
                {
                    b.Navigation("ProyectoEventoParticipante");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoGadget", b =>
                {
                    b.Navigation("ProyectoGadgetContextoHTMLplano");

                    b.Navigation("ProyectoGadgetIdioma");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanya", b =>
                {
                    b.Navigation("ProyectoPestanyaRolGrupoIdentidades");

                    b.Navigation("ProyectoPestanyaRolIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusqueda", b =>
                {
                    b.Navigation("ProyectoPestanyaBusquedaExportacion");

                    b.Navigation("ProyectoPestanyaBusquedaPesoOC");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaBusquedaExportacion", b =>
                {
                    b.Navigation("ProyectoPestanyaBusquedaExportacionExterna");

                    b.Navigation("ProyectoPestanyaBusquedaExportacionPropiedad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaDashboardAsistente", b =>
                {
                    b.Navigation("ProyectoPestanyaDashboardAsistenteDataset");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.ProyectoDS.ProyectoPestanyaMenu", b =>
                {
                    b.Navigation("ConfigAutocompletarProy");

                    b.Navigation("FacetaObjetoConocimientoProyectoPestanya");

                    b.Navigation("PresentacionPestanyaListadoSemantico");

                    b.Navigation("PresentacionPestanyaMapaSemantico");

                    b.Navigation("PresentacionPestanyaMosaicoSemantico");

                    b.Navigation("ProyectoPestanyaBusqueda");

                    b.Navigation("ProyectoPestanyaCMS");

                    b.Navigation("ProyectoPestanyaDashboardAsistente");

                    b.Navigation("ProyectoPestanyaFiltroOrdenRecursos");

                    b.Navigation("ProyectoPestanyaMenu1");

                    b.Navigation("ProyectoPestanyaMenuRolGrupoIdentidades");

                    b.Navigation("ProyectoPestanyaMenuRolIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.RedireccionRegistroRuta", b =>
                {
                    b.Navigation("RedireccionValorParametro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.Rol", b =>
                {
                    b.Navigation("RolGrupoIdentidades");

                    b.Navigation("RolIdentidad");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Roles.RolEcosistema", b =>
                {
                    b.Navigation("RolEcosistemaUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Sitemaps.SitemapsIndex", b =>
                {
                    b.Navigation("Indexlist");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.Solicitud", b =>
                {
                    b.Navigation("DatoExtraEcosistemaOpcionSolicitud");

                    b.Navigation("DatoExtraEcosistemaVirtuosoSolicitud");

                    b.Navigation("DatoExtraProyectoOpcionSolicitud");

                    b.Navigation("NotificacionSolicitud");

                    b.Navigation("SolicitudGrupo");

                    b.Navigation("SolicitudNuevaOrganizacion");

                    b.Navigation("SolicitudNuevoProfesor");

                    b.Navigation("SolicitudOrganizacion");

                    b.Navigation("SolicitudUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Solicitud.SolicitudNuevaOrganizacion", b =>
                {
                    b.Navigation("SolicitudNuevaOrgEmp");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Suscripcion.Suscripcion", b =>
                {
                    b.Navigation("CategoriaTesVinSuscrip");

                    b.Navigation("SuscripcionBlog");

                    b.Navigation("SuscripcionIdentidadProyecto");

                    b.Navigation("SuscripcionTesauroOrganizacion");

                    b.Navigation("SuscripcionTesauroProyecto");

                    b.Navigation("SuscripcionTesauroUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.CategoriaTesauro", b =>
                {
                    b.Navigation("CatTesauroAgCatTesauroInferior");

                    b.Navigation("CatTesauroAgCatTesauroSuperior");

                    b.Navigation("CatTesauroCompartida");

                    b.Navigation("CatTesauroCompartida1");

                    b.Navigation("CategoriaTesauroSugerencia");

                    b.Navigation("DocumentoWebAgCatTesauro");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Tesauro.Tesauro", b =>
                {
                    b.Navigation("CategoriaTesauro");

                    b.Navigation("CategoriaTesauroSugerencia");

                    b.Navigation("TesauroOrganizacion");

                    b.Navigation("TesauroProyecto");

                    b.Navigation("TesauroUsuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.ClausulaRegistro", b =>
                {
                    b.Navigation("ProyRolUsuClausulaReg");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.ProyectoRolUsuario", b =>
                {
                    b.Navigation("ProyRolUsuClausulaReg");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.UsuarioDS.Usuario", b =>
                {
                    b.Navigation("AdministradorGeneral");

                    b.Navigation("AdministradorOrganizacion");

                    b.Navigation("BaseRecursosUsuario");

                    b.Navigation("GeneralRolUsuario");

                    b.Navigation("GrupoUsuarioUsuario");

                    b.Navigation("InicioSesion");

                    b.Navigation("OrganizacionRolUsuario");

                    b.Navigation("Persona");

                    b.Navigation("ProyectoRolUsuario");

                    b.Navigation("ProyectoUsuarioIdentidad");

                    b.Navigation("RolEcosistemaUsuario");

                    b.Navigation("TesauroUsuario");

                    b.Navigation("UsuarioContadores");

                    b.Navigation("UsuarioRedirect");

                    b.Navigation("UsuarioVinculadoLoginRedesSociales");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.VistaVirtualDS.VistaVirtualPersonalizacion", b =>
                {
                    b.Navigation("VistaVirtual");

                    b.Navigation("VistaVirtualCMS");

                    b.Navigation("VistaVirtualDominio");

                    b.Navigation("VistaVirtualGadgetRecursos");

                    b.Navigation("VistaVirtualProyecto");

                    b.Navigation("VistaVirtualRecursos");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.Models.Voto.Voto", b =>
                {
                    b.Navigation("VotoComentario");

                    b.Navigation("VotoDocumento");

                    b.Navigation("VotoEntradaBlog");

                    b.Navigation("VotoMensajeForo");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.AD.EntityModel.ProyectoRegistroObligatorio", b =>
                {
                    b.Navigation("ListaProyectoSinRegistroObligatorio");
                });
#pragma warning restore 612, 618
        }
    }
}
