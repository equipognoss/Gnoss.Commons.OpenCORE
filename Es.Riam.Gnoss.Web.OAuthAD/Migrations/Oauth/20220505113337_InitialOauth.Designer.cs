// <auto-generated />
using System;
using Es.Riam.Gnoss.OAuthAD;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Es.Riam.Gnoss.Web.OAuthAD.Migrations.Oauth
{
    [DbContext(typeof(EntityContextOauth))]
    [Migration("20220505113337_InitialOauth")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.ConsumerData", b =>
                {
                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("UrlOrigen")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("ConsumerId");

                    b.ToTable("ConsumerData");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthConsumer", b =>
                {
                    b.Property<int>("ConsumerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Callback")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ConsumerKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConsumerSecret")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VerificationCodeFormat")
                        .HasColumnType("int");

                    b.Property<int>("VerificationCodeLength")
                        .HasColumnType("int");

                    b.HasKey("ConsumerId")
                        .HasName("PK_dbo.OAuthConsumer");

                    b.ToTable("OAuthConsumer");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthToken", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<string>("ConsumerVersion")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestTokenCallback")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("RequestTokenVerifier")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Scope")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TokenSecret")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UsuarioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TokenId")
                        .HasName("PK_dbo.OAuthToken");

                    b.HasIndex("ConsumerId");

                    b.HasIndex("UsuarioID");

                    b.ToTable("OAuthToken");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthTokenExterno", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TokenSecret")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TokenVinculadoId")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TokenId");

                    b.HasIndex("UsuarioID");

                    b.ToTable("OAuthTokenExterno");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.PinToken", b =>
                {
                    b.Property<int>("TokenId")
                        .HasColumnType("int");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TokenId");

                    b.HasIndex("UsuarioID");

                    b.ToTable("PinToken");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.UsuarioConsumer", b =>
                {
                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProyectoID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ConsumerId")
                        .HasName("PK_Usuario_Consumer");

                    b.HasIndex("UsuarioID");

                    b.ToTable("UsuarioConsumer");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.ConsumerData", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthConsumer", "OAuthConsumer")
                        .WithOne("ConsumerData")
                        .HasForeignKey("Es.Riam.Gnoss.OAuthAD.OAuth.ConsumerData", "ConsumerId")
                        .HasConstraintName("FK_ConsumerData_OAuthConsumer")
                        .IsRequired();

                    b.Navigation("OAuthConsumer");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthToken", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthConsumer", "OAuthConsumer")
                        .WithMany("OAuthToken")
                        .HasForeignKey("ConsumerId")
                        .HasConstraintName("OAuthConsumer_OAuthToken")
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.OAuthAD.OAuth.Usuario", "Usuario")
                        .WithMany("OAuthToken")
                        .HasForeignKey("UsuarioID")
                        .HasConstraintName("FK_OAuthToken_Usuario");

                    b.Navigation("OAuthConsumer");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthTokenExterno", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthToken", "OAuthToken")
                        .WithOne("OAuthTokenExterno")
                        .HasForeignKey("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthTokenExterno", "TokenId")
                        .HasConstraintName("FK_OAuthTokenExterno_OAuthToken")
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.OAuthAD.OAuth.Usuario", "Usuario")
                        .WithMany("OAuthTokenExterno")
                        .HasForeignKey("UsuarioID")
                        .HasConstraintName("FK_OAuthTokenExterno_Usuario")
                        .IsRequired();

                    b.Navigation("OAuthToken");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.PinToken", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthToken", "OAuthToken")
                        .WithOne("PinToken")
                        .HasForeignKey("Es.Riam.Gnoss.OAuthAD.OAuth.PinToken", "TokenId")
                        .HasConstraintName("FK_PinToken_OAuthToken")
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.OAuthAD.OAuth.Usuario", "Usuario")
                        .WithMany("PinToken")
                        .HasForeignKey("UsuarioID")
                        .HasConstraintName("FK_PinToken_Usuario")
                        .IsRequired();

                    b.Navigation("OAuthToken");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.UsuarioConsumer", b =>
                {
                    b.HasOne("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthConsumer", "OAuthConsumer")
                        .WithOne("UsuarioConsumer")
                        .HasForeignKey("Es.Riam.Gnoss.OAuthAD.OAuth.UsuarioConsumer", "ConsumerId")
                        .HasConstraintName("FK_Usuario_Consumer_OAuthConsumer")
                        .IsRequired();

                    b.HasOne("Es.Riam.Gnoss.OAuthAD.OAuth.Usuario", "Usuario")
                        .WithMany("UsuarioConsumer")
                        .HasForeignKey("UsuarioID")
                        .HasConstraintName("FK_Usuario_Consumer_Usuario")
                        .IsRequired();

                    b.Navigation("OAuthConsumer");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthConsumer", b =>
                {
                    b.Navigation("ConsumerData");

                    b.Navigation("OAuthToken");

                    b.Navigation("UsuarioConsumer");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.OAuthToken", b =>
                {
                    b.Navigation("OAuthTokenExterno");

                    b.Navigation("PinToken");
                });

            modelBuilder.Entity("Es.Riam.Gnoss.OAuthAD.OAuth.Usuario", b =>
                {
                    b.Navigation("OAuthToken");

                    b.Navigation("OAuthTokenExterno");

                    b.Navigation("PinToken");

                    b.Navigation("UsuarioConsumer");
                });
#pragma warning restore 612, 618
        }
    }
}
