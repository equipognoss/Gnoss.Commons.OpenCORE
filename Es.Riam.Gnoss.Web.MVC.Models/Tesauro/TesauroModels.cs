using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Es.Riam.Gnoss.Web.MVC.Models.Tesauro
{
	public class TesauroModels
	{
		/// <summary>
		/// Represents a Concept according to the Ontology
		/// </summary>
		public class Concept
		{
			/// <summary>
			/// Subject of the Concept. If this property is empty will be generated by the source and the identifier automatically
			/// </summary>
			public string Subject { get; set; }

			/// <summary>
			/// Identifier of the Concept
			/// </summary>
			[Required]
			public string Identifier { get; set; }

			/// <summary>
			/// Name to represents the Concept. The key is the language (es, en, de, eu, ...) and the value is the Name in the indicated language.
			/// </summary>
			[Required]
			public Dictionary<string, string> PrefLabel { get; set; }

			/// <summary>
			/// Subjects of the Narrowers of this Concept
			/// </summary>
			public List<Concept> Narrower { get; set; }

			/// <summary> 
			/// Subjects of the Concept related with this Concept in the same level 
			/// </summary>
			public List<Concept> RelatedTo { get; set; }

			/// <summary>
			/// Depth of the Concept
			/// </summary>
			public string Symbol { get; set; }
		}

		/// <summary>
		/// Represents a Collection according to the Ontology
		/// </summary>
		public class Collection
		{
			/// <summary>
			/// Subject of the Collection
			/// </summary>
			public string Subject { get; set; }

			/// <summary>
			/// The Subjects of the memebers.
			/// </summary>
			public List<Concept> Member { get; set; }

			/// <summary>
			/// Name to represents the Collection. The key is the language (es, en, de, eu, ...) and the value is the Name in the indicated language.
			/// </summary>
			public Dictionary<string, string> ScopeNote { get; set; }
		}

		/// <summary>
		/// Represents a Thesaurus according to the Ontology
		/// </summary>
		public class Thesaurus
		{
			/// <summary>
			/// Collection of the Thesaurus
			/// </summary>        
			public Collection Collection { get; set; }

			/// <summary>
			/// Short name of the community when the thesaurus will be loaded
			/// </summary>
			[Required]
			public string CommunityShortName { get; set; }

			/// <summary>
			/// Name of the ontology
			/// </summary>
			[Required]
			public string Ontology { get; set; }

			/// <summary>
			/// Source of the Thesaurus to load
			/// </summary>
			[Required]
			public string Source { get; set; }
		}
	}
}
